<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="694" onload="init(evt)" viewBox="0 0 1200 694" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="694" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="677.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="677.00"> </text><svg id="frames" x="10" width="1180" total_samples="395494"><g><title>[[heap]] (97 samples, 0.02%)</title><rect x="0.0015%" y="613" width="0.0245%" height="15" fill="rgb(227,0,7)" fg:x="6" fg:w="97"/><text x="0.2515%" y="623.50"></text></g><g><title>rocksdb_application::do_work (97 samples, 0.02%)</title><rect x="0.0015%" y="597" width="0.0245%" height="15" fill="rgb(217,0,24)" fg:x="6" fg:w="97"/><text x="0.2515%" y="607.50"></text></g><g><title>__GI___libc_free (181 samples, 0.05%)</title><rect x="0.0410%" y="597" width="0.0458%" height="15" fill="rgb(221,193,54)" fg:x="162" fg:w="181"/><text x="0.2910%" y="607.50"></text></g><g><title>__GI___libc_malloc (197 samples, 0.05%)</title><rect x="0.0867%" y="597" width="0.0498%" height="15" fill="rgb(248,212,6)" fg:x="343" fg:w="197"/><text x="0.3367%" y="607.50"></text></g><g><title>___pthread_mutex_lock (82 samples, 0.02%)</title><rect x="0.1375%" y="597" width="0.0207%" height="15" fill="rgb(208,68,35)" fg:x="544" fg:w="82"/><text x="0.3875%" y="607.50"></text></g><g><title>__memcpy_evex_unaligned_erms (187 samples, 0.05%)</title><rect x="0.1762%" y="597" width="0.0473%" height="15" fill="rgb(232,128,0)" fg:x="697" fg:w="187"/><text x="0.4262%" y="607.50"></text></g><g><title>__tls_init (168 samples, 0.04%)</title><rect x="0.2243%" y="597" width="0.0425%" height="15" fill="rgb(207,160,47)" fg:x="887" fg:w="168"/><text x="0.4743%" y="607.50"></text></g><g><title>_int_free (421 samples, 0.11%)</title><rect x="0.2668%" y="597" width="0.1064%" height="15" fill="rgb(228,23,34)" fg:x="1055" fg:w="421"/><text x="0.5168%" y="607.50"></text></g><g><title>_int_malloc (71 samples, 0.02%)</title><rect x="0.3732%" y="597" width="0.0180%" height="15" fill="rgb(218,30,26)" fg:x="1476" fg:w="71"/><text x="0.6232%" y="607.50"></text></g><g><title>non-virtual thunk to rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (622 samples, 0.16%)</title><rect x="0.3947%" y="597" width="0.1573%" height="15" fill="rgb(220,122,19)" fg:x="1561" fg:w="622"/><text x="0.6447%" y="607.50"></text></g><g><title>operator new (147 samples, 0.04%)</title><rect x="0.5520%" y="597" width="0.0372%" height="15" fill="rgb(250,228,42)" fg:x="2183" fg:w="147"/><text x="0.8020%" y="607.50"></text></g><g><title>rocksdb::Block::Block (94 samples, 0.02%)</title><rect x="0.6081%" y="597" width="0.0238%" height="15" fill="rgb(240,193,28)" fg:x="2405" fg:w="94"/><text x="0.8581%" y="607.50"></text></g><g><title>rocksdb::Block::InitializeDataBlockProtectionInfo (77 samples, 0.02%)</title><rect x="0.6324%" y="597" width="0.0195%" height="15" fill="rgb(216,20,37)" fg:x="2501" fg:w="77"/><text x="0.8824%" y="607.50"></text></g><g><title>rocksdb::Block::NewDataIterator (86 samples, 0.02%)</title><rect x="0.6518%" y="597" width="0.0217%" height="15" fill="rgb(206,188,39)" fg:x="2578" fg:w="86"/><text x="0.9018%" y="607.50"></text></g><g><title>rocksdb::BlockBasedTable::FullFilterKeyMayMatch (112 samples, 0.03%)</title><rect x="0.6880%" y="597" width="0.0283%" height="15" fill="rgb(217,207,13)" fg:x="2721" fg:w="112"/><text x="0.9380%" y="607.50"></text></g><g><title>rocksdb::BlockBasedTable::GetDataBlockFromCache&lt;rocksdb::Block_kData&gt; (209 samples, 0.05%)</title><rect x="0.7163%" y="597" width="0.0528%" height="15" fill="rgb(231,73,38)" fg:x="2833" fg:w="209"/><text x="0.9663%" y="607.50"></text></g><g><title>rocksdb::BlockBasedTable::InitBlockIterator&lt;rocksdb::DataBlockIter&gt; (71 samples, 0.02%)</title><rect x="0.7742%" y="597" width="0.0180%" height="15" fill="rgb(225,20,46)" fg:x="3062" fg:w="71"/><text x="1.0242%" y="607.50"></text></g><g><title>rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block_kData&gt; (93 samples, 0.02%)</title><rect x="0.7922%" y="597" width="0.0235%" height="15" fill="rgb(210,31,41)" fg:x="3133" fg:w="93"/><text x="1.0422%" y="607.50"></text></g><g><title>rocksdb::BlockBasedTable::NewRangeTombstoneIterator (67 samples, 0.02%)</title><rect x="0.8215%" y="597" width="0.0169%" height="15" fill="rgb(221,200,47)" fg:x="3249" fg:w="67"/><text x="1.0715%" y="607.50"></text></g><g><title>rocksdb::BlockBasedTable::UpdateCacheHitMetrics (61 samples, 0.02%)</title><rect x="0.8513%" y="597" width="0.0154%" height="15" fill="rgb(226,26,5)" fg:x="3367" fg:w="61"/><text x="1.1013%" y="607.50"></text></g><g><title>rocksdb::BlockBasedTable::UpdateCacheMissMetrics (41 samples, 0.01%)</title><rect x="0.8721%" y="597" width="0.0104%" height="15" fill="rgb(249,33,26)" fg:x="3449" fg:w="41"/><text x="1.1221%" y="607.50"></text></g><g><title>rocksdb::BlockCreateContext::Create (54 samples, 0.01%)</title><rect x="0.8824%" y="597" width="0.0137%" height="15" fill="rgb(235,183,28)" fg:x="3490" fg:w="54"/><text x="1.1324%" y="607.50"></text></g><g><title>rocksdb::BlockFetcher::TryGetSerializedBlockFromPersistentCache (40 samples, 0.01%)</title><rect x="0.8991%" y="597" width="0.0101%" height="15" fill="rgb(221,5,38)" fg:x="3556" fg:w="40"/><text x="1.1491%" y="607.50"></text></g><g><title>rocksdb::BlockHandle::DecodeFrom (273 samples, 0.07%)</title><rect x="0.9097%" y="597" width="0.0690%" height="15" fill="rgb(247,18,42)" fg:x="3598" fg:w="273"/><text x="1.1597%" y="607.50"></text></g><g><title>rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::UpdateKey (90 samples, 0.02%)</title><rect x="0.9788%" y="597" width="0.0228%" height="15" fill="rgb(241,131,45)" fg:x="3871" fg:w="90"/><text x="1.2288%" y="607.50"></text></g><g><title>rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::UpdateRawKeyAndMaybePadMinTimestamp (71 samples, 0.02%)</title><rect x="1.0015%" y="597" width="0.0180%" height="15" fill="rgb(249,31,29)" fg:x="3961" fg:w="71"/><text x="1.2515%" y="607.50"></text></g><g><title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::BinarySeek&lt;rocksdb::DecodeKey&gt; (467 samples, 0.12%)</title><rect x="1.0195%" y="597" width="0.1181%" height="15" fill="rgb(225,111,53)" fg:x="4032" fg:w="467"/><text x="1.2695%" y="607.50"></text></g><g><title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::FindKeyAfterBinarySeek (987 samples, 0.25%)</title><rect x="1.1376%" y="597" width="0.2496%" height="15" fill="rgb(238,160,17)" fg:x="4499" fg:w="987"/><text x="1.3876%" y="607.50"></text></g><g><title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::ParseNextKey&lt;rocksdb::DecodeEntry&gt; (762 samples, 0.19%)</title><rect x="1.3871%" y="597" width="0.1927%" height="15" fill="rgb(214,148,48)" fg:x="5486" fg:w="762"/><text x="1.6371%" y="607.50"></text></g><g><title>rocksdb::Cleanable::RegisterCleanup (43 samples, 0.01%)</title><rect x="1.5897%" y="597" width="0.0109%" height="15" fill="rgb(232,36,49)" fg:x="6287" fg:w="43"/><text x="1.8397%" y="607.50"></text></g><g><title>rocksdb::DBImpl::FailIfCfHasTs (300 samples, 0.08%)</title><rect x="1.6314%" y="597" width="0.0759%" height="15" fill="rgb(209,103,24)" fg:x="6452" fg:w="300"/><text x="1.8814%" y="607.50"></text></g><g><title>rocksdb::DBImpl::GetImpl (42 samples, 0.01%)</title><rect x="1.7136%" y="597" width="0.0106%" height="15" fill="rgb(229,88,8)" fg:x="6777" fg:w="42"/><text x="1.9636%" y="607.50"></text></g><g><title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion (47 samples, 0.01%)</title><rect x="1.7242%" y="597" width="0.0119%" height="15" fill="rgb(213,181,19)" fg:x="6819" fg:w="47"/><text x="1.9742%" y="607.50"></text></g><g><title>rocksdb::DataBlockIter::NextImpl (235 samples, 0.06%)</title><rect x="1.7361%" y="597" width="0.0594%" height="15" fill="rgb(254,191,54)" fg:x="6866" fg:w="235"/><text x="1.9861%" y="607.50"></text></g><g><title>rocksdb::DataBlockIter::SeekImpl (117 samples, 0.03%)</title><rect x="1.7955%" y="597" width="0.0296%" height="15" fill="rgb(241,83,37)" fg:x="7101" fg:w="117"/><text x="2.0455%" y="607.50"></text></g><g><title>rocksdb::GetContext::GetContext (51 samples, 0.01%)</title><rect x="1.8261%" y="597" width="0.0129%" height="15" fill="rgb(233,36,39)" fg:x="7222" fg:w="51"/><text x="2.0761%" y="607.50"></text></g><g><title>rocksdb::GetContext::SaveValue (90 samples, 0.02%)</title><rect x="1.8390%" y="597" width="0.0228%" height="15" fill="rgb(226,3,54)" fg:x="7273" fg:w="90"/><text x="2.0890%" y="607.50"></text></g><g><title>rocksdb::IndexBlockIter::ParseNextIndexKey (134 samples, 0.03%)</title><rect x="1.8797%" y="597" width="0.0339%" height="15" fill="rgb(245,192,40)" fg:x="7434" fg:w="134"/><text x="2.1297%" y="607.50"></text></g><g><title>rocksdb::IndexBlockIter::SeekImpl (379 samples, 0.10%)</title><rect x="1.9136%" y="597" width="0.0958%" height="15" fill="rgb(238,167,29)" fg:x="7568" fg:w="379"/><text x="2.1636%" y="607.50"></text></g><g><title>rocksdb::IndexBlockIter::~IndexBlockIter (133 samples, 0.03%)</title><rect x="2.0127%" y="597" width="0.0336%" height="15" fill="rgb(232,182,51)" fg:x="7960" fg:w="133"/><text x="2.2627%" y="607.50"></text></g><g><title>rocksdb::IndexValue::DecodeFrom (120 samples, 0.03%)</title><rect x="2.0463%" y="597" width="0.0303%" height="15" fill="rgb(231,60,39)" fg:x="8093" fg:w="120"/><text x="2.2963%" y="607.50"></text></g><g><title>rocksdb::LookupKey::LookupKey (49 samples, 0.01%)</title><rect x="2.0766%" y="597" width="0.0124%" height="15" fill="rgb(208,69,12)" fg:x="8213" fg:w="49"/><text x="2.3266%" y="607.50"></text></g><g><title>rocksdb::MemTableListVersion::Get (64 samples, 0.02%)</title><rect x="2.0893%" y="597" width="0.0162%" height="15" fill="rgb(235,93,37)" fg:x="8263" fg:w="64"/><text x="2.3393%" y="607.50"></text></g><g><title>rocksdb::MemTableListVersion::GetFromList (40 samples, 0.01%)</title><rect x="2.1055%" y="597" width="0.0101%" height="15" fill="rgb(213,116,39)" fg:x="8327" fg:w="40"/><text x="2.3555%" y="607.50"></text></g><g><title>rocksdb::PosixRandomAccessFile::Read (80 samples, 0.02%)</title><rect x="2.1237%" y="597" width="0.0202%" height="15" fill="rgb(222,207,29)" fg:x="8399" fg:w="80"/><text x="2.3737%" y="607.50"></text></g><g><title>rocksdb::ReadOptions::ReadOptions (52 samples, 0.01%)</title><rect x="2.1659%" y="597" width="0.0131%" height="15" fill="rgb(206,96,30)" fg:x="8566" fg:w="52"/><text x="2.4159%" y="607.50"></text></g><g><title>rocksdb::ShardedCache&lt;rocksdb::lru_cache::LRUCacheShard&gt;::Insert (209 samples, 0.05%)</title><rect x="2.1849%" y="597" width="0.0528%" height="15" fill="rgb(218,138,4)" fg:x="8641" fg:w="209"/><text x="2.4349%" y="607.50"></text></g><g><title>rocksdb::ShardedCache&lt;rocksdb::lru_cache::LRUCacheShard&gt;::Lookup (57 samples, 0.01%)</title><rect x="2.2377%" y="597" width="0.0144%" height="15" fill="rgb(250,191,14)" fg:x="8850" fg:w="57"/><text x="2.4877%" y="607.50"></text></g><g><title>rocksdb::ShouldReportDetailedTime (61 samples, 0.02%)</title><rect x="2.2521%" y="597" width="0.0154%" height="15" fill="rgb(239,60,40)" fg:x="8907" fg:w="61"/><text x="2.5021%" y="607.50"></text></g><g><title>rocksdb::Status::Status (80 samples, 0.02%)</title><rect x="2.2675%" y="597" width="0.0202%" height="15" fill="rgb(206,27,48)" fg:x="8968" fg:w="80"/><text x="2.5175%" y="607.50"></text></g><g><title>rocksdb::Status::operator= (172 samples, 0.04%)</title><rect x="2.2878%" y="597" width="0.0435%" height="15" fill="rgb(225,35,8)" fg:x="9048" fg:w="172"/><text x="2.5378%" y="607.50"></text></g><g><title>rocksdb::StopWatch::~StopWatch (111 samples, 0.03%)</title><rect x="2.3391%" y="597" width="0.0281%" height="15" fill="rgb(250,213,24)" fg:x="9251" fg:w="111"/><text x="2.5891%" y="607.50"></text></g><g><title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap (89 samples, 0.02%)</title><rect x="2.3745%" y="597" width="0.0225%" height="15" fill="rgb(247,123,22)" fg:x="9391" fg:w="89"/><text x="2.6245%" y="607.50"></text></g><g><title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal (51 samples, 0.01%)</title><rect x="2.3970%" y="597" width="0.0129%" height="15" fill="rgb(231,138,38)" fg:x="9480" fg:w="51"/><text x="2.6470%" y="607.50"></text></g><g><title>rocksdb::ThreadLocalPtr::StaticMeta::Swap (50 samples, 0.01%)</title><rect x="2.4099%" y="597" width="0.0126%" height="15" fill="rgb(231,145,46)" fg:x="9531" fg:w="50"/><text x="2.6599%" y="607.50"></text></g><g><title>rocksdb::UncompressSerializedBlock (87 samples, 0.02%)</title><rect x="2.4334%" y="597" width="0.0220%" height="15" fill="rgb(251,118,11)" fg:x="9624" fg:w="87"/><text x="2.6834%" y="607.50"></text></g><g><title>rocksdb::VerifyBlockChecksum (66 samples, 0.02%)</title><rect x="2.4645%" y="597" width="0.0167%" height="15" fill="rgb(217,147,25)" fg:x="9747" fg:w="66"/><text x="2.7145%" y="607.50"></text></g><g><title>rocksdb::db::DBCommon&lt;T,D&gt;::get (98 samples, 0.02%)</title><rect x="2.4855%" y="597" width="0.0248%" height="15" fill="rgb(247,81,37)" fg:x="9830" fg:w="98"/><text x="2.7355%" y="607.50"></text></g><g><title>rocksdb::lru_cache::LRUCacheShard::EvictFromLRU (78 samples, 0.02%)</title><rect x="2.5115%" y="597" width="0.0197%" height="15" fill="rgb(209,12,38)" fg:x="9933" fg:w="78"/><text x="2.7615%" y="607.50"></text></g><g><title>rocksdb::lru_cache::LRUCacheShard::NotifyEvicted (43 samples, 0.01%)</title><rect x="2.5469%" y="597" width="0.0109%" height="15" fill="rgb(227,1,9)" fg:x="10073" fg:w="43"/><text x="2.7969%" y="607.50"></text></g><g><title>rocksdb::lru_cache::LRUCacheShard::Release (107 samples, 0.03%)</title><rect x="2.5578%" y="597" width="0.0271%" height="15" fill="rgb(248,47,43)" fg:x="10116" fg:w="107"/><text x="2.8078%" y="607.50"></text></g><g><title>rocksdb::lru_cache::LRUHandleTable::FindPointer (496 samples, 0.13%)</title><rect x="2.5849%" y="597" width="0.1254%" height="15" fill="rgb(221,10,30)" fg:x="10223" fg:w="496"/><text x="2.8349%" y="607.50"></text></g><g><title>rocksdb::lru_cache::LRUHandleTable::Insert (46 samples, 0.01%)</title><rect x="2.7103%" y="597" width="0.0116%" height="15" fill="rgb(210,229,1)" fg:x="10719" fg:w="46"/><text x="2.9603%" y="607.50"></text></g><g><title>rocksdb::port::Mutex::Lock (101 samples, 0.03%)</title><rect x="2.7292%" y="597" width="0.0255%" height="15" fill="rgb(222,148,37)" fg:x="10794" fg:w="101"/><text x="2.9792%" y="607.50"></text></g><g><title>rocksdb::port::Mutex::Unlock (113 samples, 0.03%)</title><rect x="2.7548%" y="597" width="0.0286%" height="15" fill="rgb(234,67,33)" fg:x="10895" fg:w="113"/><text x="3.0048%" y="607.50"></text></g><g><title>rocksdb_get_pinned (117 samples, 0.03%)</title><rect x="2.7834%" y="597" width="0.0296%" height="15" fill="rgb(247,98,35)" fg:x="11008" fg:w="117"/><text x="3.0334%" y="607.50"></text></g><g><title>snappy::ClearDeferred (222 samples, 0.06%)</title><rect x="2.8180%" y="597" width="0.0561%" height="15" fill="rgb(247,138,52)" fg:x="11145" fg:w="222"/><text x="3.0680%" y="607.50"></text></g><g><title>snappy::DecompressBranchless&lt;char*&gt; (4,042 samples, 1.02%)</title><rect x="2.8741%" y="597" width="1.0220%" height="15" fill="rgb(213,79,30)" fg:x="11367" fg:w="4042"/><text x="3.1241%" y="607.50"></text></g><g><title>snappy::DeferMemCopy (574 samples, 0.15%)</title><rect x="3.8961%" y="597" width="0.1451%" height="15" fill="rgb(246,177,23)" fg:x="15409" fg:w="574"/><text x="4.1461%" y="607.50"></text></g><g><title>snappy::MemCopy64 (14,361 samples, 3.63%)</title><rect x="4.0418%" y="597" width="3.6312%" height="15" fill="rgb(230,62,27)" fg:x="15985" fg:w="14361"/><text x="4.2918%" y="607.50">snap..</text></g><g><title>snappy::RawUncompress (218 samples, 0.06%)</title><rect x="7.6729%" y="597" width="0.0551%" height="15" fill="rgb(216,154,8)" fg:x="30346" fg:w="218"/><text x="7.9229%" y="607.50"></text></g><g><title>snappy::SnappyDecompressor::DecompressAllTags&lt;snappy::SnappyArrayWriter&gt; (1,139 samples, 0.29%)</title><rect x="7.7281%" y="597" width="0.2880%" height="15" fill="rgb(244,35,45)" fg:x="30564" fg:w="1139"/><text x="7.9781%" y="607.50"></text></g><g><title>snappy::SnappyDecompressor::RefillTag (355 samples, 0.09%)</title><rect x="8.0161%" y="597" width="0.0898%" height="15" fill="rgb(251,115,12)" fg:x="31703" fg:w="355"/><text x="8.2661%" y="607.50"></text></g><g><title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (57 samples, 0.01%)</title><rect x="8.1058%" y="597" width="0.0144%" height="15" fill="rgb(240,54,50)" fg:x="32058" fg:w="57"/><text x="8.3558%" y="607.50"></text></g><g><title>[anon] (32,070 samples, 8.11%)</title><rect x="0.0260%" y="613" width="8.1088%" height="15" fill="rgb(233,84,52)" fg:x="103" fg:w="32070"/><text x="0.2760%" y="623.50">[anon]</text></g><g><title>[rocksdb-application] (45 samples, 0.01%)</title><rect x="8.1349%" y="613" width="0.0114%" height="15" fill="rgb(207,117,47)" fg:x="32173" fg:w="45"/><text x="8.3849%" y="623.50"></text></g><g><title>rocksdb::ShardedCache&lt;rocksdb::lru_cache::LRUCacheShard&gt;::Lookup (44 samples, 0.01%)</title><rect x="8.1351%" y="597" width="0.0111%" height="15" fill="rgb(249,43,39)" fg:x="32174" fg:w="44"/><text x="8.3851%" y="607.50"></text></g><g><title>&lt;[T] as rand::seq::SliceRandom&gt;::choose (49 samples, 0.01%)</title><rect x="8.1463%" y="597" width="0.0124%" height="15" fill="rgb(209,38,44)" fg:x="32218" fg:w="49"/><text x="8.3963%" y="607.50"></text></g><g><title>&lt;rocksdb::db_pinnable_slice::DBPinnableSlice as core::convert::AsRef&lt;[u8]&gt;&gt;::as_ref (48 samples, 0.01%)</title><rect x="8.1587%" y="597" width="0.0121%" height="15" fill="rgb(236,212,23)" fg:x="32267" fg:w="48"/><text x="8.4087%" y="607.50"></text></g><g><title>[rocksdb-application] (51 samples, 0.01%)</title><rect x="8.1710%" y="597" width="0.0129%" height="15" fill="rgb(242,79,21)" fg:x="32316" fg:w="51"/><text x="8.4210%" y="607.50"></text></g><g><title>rocksdb::ShardedCache&lt;rocksdb::lru_cache::LRUCacheShard&gt;::Lookup (51 samples, 0.01%)</title><rect x="8.1710%" y="581" width="0.0129%" height="15" fill="rgb(211,96,35)" fg:x="32316" fg:w="51"/><text x="8.4210%" y="591.50"></text></g><g><title>__GI___clock_gettime (78 samples, 0.02%)</title><rect x="8.1839%" y="597" width="0.0197%" height="15" fill="rgb(253,215,40)" fg:x="32367" fg:w="78"/><text x="8.4339%" y="607.50"></text></g><g><title>__GI___libc_free (101 samples, 0.03%)</title><rect x="8.2037%" y="597" width="0.0255%" height="15" fill="rgb(211,81,21)" fg:x="32445" fg:w="101"/><text x="8.4537%" y="607.50"></text></g><g><title>__GI___libc_malloc (81 samples, 0.02%)</title><rect x="8.2292%" y="597" width="0.0205%" height="15" fill="rgb(208,190,38)" fg:x="32546" fg:w="81"/><text x="8.4792%" y="607.50"></text></g><g><title>___pthread_mutex_lock (44 samples, 0.01%)</title><rect x="8.2502%" y="597" width="0.0111%" height="15" fill="rgb(235,213,38)" fg:x="32629" fg:w="44"/><text x="8.5002%" y="607.50"></text></g><g><title>error_entry (115 samples, 0.03%)</title><rect x="8.2735%" y="565" width="0.0291%" height="15" fill="rgb(237,122,38)" fg:x="32721" fg:w="115"/><text x="8.5235%" y="575.50"></text></g><g><title>__libc_pread64 (156 samples, 0.04%)</title><rect x="8.2633%" y="597" width="0.0394%" height="15" fill="rgb(244,218,35)" fg:x="32681" fg:w="156"/><text x="8.5133%" y="607.50"></text></g><g><title>__libc_pread64 (129 samples, 0.03%)</title><rect x="8.2702%" y="581" width="0.0326%" height="15" fill="rgb(240,68,47)" fg:x="32708" fg:w="129"/><text x="8.5202%" y="591.50"></text></g><g><title>__memcmp_evex_movbe (294 samples, 0.07%)</title><rect x="8.3028%" y="597" width="0.0743%" height="15" fill="rgb(210,16,53)" fg:x="32837" fg:w="294"/><text x="8.5528%" y="607.50"></text></g><g><title>__memcpy_evex_unaligned_erms (54 samples, 0.01%)</title><rect x="8.3771%" y="597" width="0.0137%" height="15" fill="rgb(235,124,12)" fg:x="33131" fg:w="54"/><text x="8.6271%" y="607.50"></text></g><g><title>__tls_init (399 samples, 0.10%)</title><rect x="8.3910%" y="597" width="0.1009%" height="15" fill="rgb(224,169,11)" fg:x="33186" fg:w="399"/><text x="8.6410%" y="607.50"></text></g><g><title>_int_free (273 samples, 0.07%)</title><rect x="8.4919%" y="597" width="0.0690%" height="15" fill="rgb(250,166,2)" fg:x="33585" fg:w="273"/><text x="8.7419%" y="607.50"></text></g><g><title>chrono::offset::utc::Utc::now (98 samples, 0.02%)</title><rect x="8.5657%" y="597" width="0.0248%" height="15" fill="rgb(242,216,29)" fg:x="33877" fg:w="98"/><text x="8.8157%" y="607.50"></text></g><g><title>non-virtual thunk to rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (865 samples, 0.22%)</title><rect x="8.6001%" y="597" width="0.2187%" height="15" fill="rgb(230,116,27)" fg:x="34013" fg:w="865"/><text x="8.8501%" y="607.50"></text></g><g><title>operator new (54 samples, 0.01%)</title><rect x="8.8188%" y="597" width="0.0137%" height="15" fill="rgb(228,99,48)" fg:x="34878" fg:w="54"/><text x="9.0688%" y="607.50"></text></g><g><title>rocksdb::(anonymous namespace)::FilePicker::GetNextFile (65 samples, 0.02%)</title><rect x="8.8325%" y="597" width="0.0164%" height="15" fill="rgb(253,11,6)" fg:x="34932" fg:w="65"/><text x="9.0825%" y="607.50"></text></g><g><title>rocksdb::Block::NewIndexIterator (68 samples, 0.02%)</title><rect x="8.8558%" y="597" width="0.0172%" height="15" fill="rgb(247,143,39)" fg:x="35024" fg:w="68"/><text x="9.1058%" y="607.50"></text></g><g><title>rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block_kData&gt; (44 samples, 0.01%)</title><rect x="8.8886%" y="597" width="0.0111%" height="15" fill="rgb(236,97,10)" fg:x="35154" fg:w="44"/><text x="9.1386%" y="607.50"></text></g><g><title>rocksdb::BlockBasedTable::UpdateCacheMissMetrics (51 samples, 0.01%)</title><rect x="8.9127%" y="597" width="0.0129%" height="15" fill="rgb(233,208,19)" fg:x="35249" fg:w="51"/><text x="9.1627%" y="607.50"></text></g><g><title>rocksdb::BlockCacheLookupContext::~BlockCacheLookupContext (76 samples, 0.02%)</title><rect x="8.9255%" y="597" width="0.0192%" height="15" fill="rgb(216,164,2)" fg:x="35300" fg:w="76"/><text x="9.1755%" y="607.50"></text></g><g><title>rocksdb::BlockHandle::DecodeFrom (40 samples, 0.01%)</title><rect x="8.9582%" y="597" width="0.0101%" height="15" fill="rgb(220,129,5)" fg:x="35429" fg:w="40"/><text x="9.2082%" y="607.50"></text></g><g><title>rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::UpdateKey (67 samples, 0.02%)</title><rect x="8.9683%" y="597" width="0.0169%" height="15" fill="rgb(242,17,10)" fg:x="35469" fg:w="67"/><text x="9.2183%" y="607.50"></text></g><g><title>rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::UpdateRawKeyAndMaybePadMinTimestamp (88 samples, 0.02%)</title><rect x="8.9852%" y="597" width="0.0223%" height="15" fill="rgb(242,107,0)" fg:x="35536" fg:w="88"/><text x="9.2352%" y="607.50"></text></g><g><title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::BinarySeek&lt;rocksdb::DecodeKey&gt; (82 samples, 0.02%)</title><rect x="9.0075%" y="597" width="0.0207%" height="15" fill="rgb(251,28,31)" fg:x="35624" fg:w="82"/><text x="9.2575%" y="607.50"></text></g><g><title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::FindKeyAfterBinarySeek (88 samples, 0.02%)</title><rect x="9.0282%" y="597" width="0.0223%" height="15" fill="rgb(233,223,10)" fg:x="35706" fg:w="88"/><text x="9.2782%" y="607.50"></text></g><g><title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::ParseNextKey&lt;rocksdb::DecodeEntry&gt; (371 samples, 0.09%)</title><rect x="9.0505%" y="597" width="0.0938%" height="15" fill="rgb(215,21,27)" fg:x="35794" fg:w="371"/><text x="9.3005%" y="607.50"></text></g><g><title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::UpdateRawKeyAndMaybePadMinTimestamp (111 samples, 0.03%)</title><rect x="9.1443%" y="597" width="0.0281%" height="15" fill="rgb(232,23,21)" fg:x="36165" fg:w="111"/><text x="9.3943%" y="607.50"></text></g><g><title>rocksdb::Cleanable::~Cleanable (119 samples, 0.03%)</title><rect x="9.1829%" y="597" width="0.0301%" height="15" fill="rgb(244,5,23)" fg:x="36318" fg:w="119"/><text x="9.4329%" y="607.50"></text></g><g><title>rocksdb::ComputeBuiltinChecksum (41 samples, 0.01%)</title><rect x="9.2272%" y="597" width="0.0104%" height="15" fill="rgb(226,81,46)" fg:x="36493" fg:w="41"/><text x="9.4772%" y="607.50"></text></g><g><title>rocksdb::DBImpl::Get (53 samples, 0.01%)</title><rect x="9.2500%" y="597" width="0.0134%" height="15" fill="rgb(247,70,30)" fg:x="36583" fg:w="53"/><text x="9.5000%" y="607.50"></text></g><g><title>rocksdb::DataBlockIter::NextImpl (240 samples, 0.06%)</title><rect x="9.2762%" y="597" width="0.0607%" height="15" fill="rgb(212,68,19)" fg:x="36687" fg:w="240"/><text x="9.5262%" y="607.50"></text></g><g><title>rocksdb::DataBlockIter::SeekImpl (57 samples, 0.01%)</title><rect x="9.3369%" y="597" width="0.0144%" height="15" fill="rgb(240,187,13)" fg:x="36927" fg:w="57"/><text x="9.5869%" y="607.50"></text></g><g><title>rocksdb::GetContext::SaveValue (64 samples, 0.02%)</title><rect x="9.3620%" y="597" width="0.0162%" height="15" fill="rgb(223,113,26)" fg:x="37026" fg:w="64"/><text x="9.6120%" y="607.50"></text></g><g><title>rocksdb::IndexBlockIter::ParseNextIndexKey (71 samples, 0.02%)</title><rect x="9.3885%" y="597" width="0.0180%" height="15" fill="rgb(206,192,2)" fg:x="37131" fg:w="71"/><text x="9.6385%" y="607.50"></text></g><g><title>rocksdb::IndexBlockIter::SeekImpl (74 samples, 0.02%)</title><rect x="9.4065%" y="597" width="0.0187%" height="15" fill="rgb(241,108,4)" fg:x="37202" fg:w="74"/><text x="9.6565%" y="607.50"></text></g><g><title>rocksdb::IndexValue::DecodeFrom (262 samples, 0.07%)</title><rect x="9.4325%" y="597" width="0.0662%" height="15" fill="rgb(247,173,49)" fg:x="37305" fg:w="262"/><text x="9.6825%" y="607.50"></text></g><g><title>rocksdb::Status::Status (125 samples, 0.03%)</title><rect x="9.5334%" y="597" width="0.0316%" height="15" fill="rgb(224,114,35)" fg:x="37704" fg:w="125"/><text x="9.7834%" y="607.50"></text></g><g><title>rocksdb::Status::operator= (204 samples, 0.05%)</title><rect x="9.5650%" y="597" width="0.0516%" height="15" fill="rgb(245,159,27)" fg:x="37829" fg:w="204"/><text x="9.8150%" y="607.50"></text></g><g><title>rocksdb::StopWatch::~StopWatch (58 samples, 0.01%)</title><rect x="9.6168%" y="597" width="0.0147%" height="15" fill="rgb(245,172,44)" fg:x="38034" fg:w="58"/><text x="9.8668%" y="607.50"></text></g><g><title>rocksdb::lru_cache::LRUCacheShard::CreateHandle (79 samples, 0.02%)</title><rect x="9.6570%" y="597" width="0.0200%" height="15" fill="rgb(236,23,11)" fg:x="38193" fg:w="79"/><text x="9.9070%" y="607.50"></text></g><g><title>rocksdb::lru_cache::LRUCacheShard::InsertItem (68 samples, 0.02%)</title><rect x="9.6800%" y="597" width="0.0172%" height="15" fill="rgb(205,117,38)" fg:x="38284" fg:w="68"/><text x="9.9300%" y="607.50"></text></g><g><title>rocksdb::lru_cache::LRUCacheShard::Lookup (57 samples, 0.01%)</title><rect x="9.7132%" y="597" width="0.0144%" height="15" fill="rgb(237,72,25)" fg:x="38415" fg:w="57"/><text x="9.9632%" y="607.50"></text></g><g><title>rocksdb::lru_cache::LRUCacheShard::Release (76 samples, 0.02%)</title><rect x="9.7286%" y="597" width="0.0192%" height="15" fill="rgb(244,70,9)" fg:x="38476" fg:w="76"/><text x="9.9786%" y="607.50"></text></g><g><title>rocksdb_get_pinned (65 samples, 0.02%)</title><rect x="9.7637%" y="597" width="0.0164%" height="15" fill="rgb(217,125,39)" fg:x="38615" fg:w="65"/><text x="10.0137%" y="607.50"></text></g><g><title>snappy::DecompressBranchless&lt;char*&gt; (773 samples, 0.20%)</title><rect x="9.7938%" y="597" width="0.1955%" height="15" fill="rgb(235,36,10)" fg:x="38734" fg:w="773"/><text x="10.0438%" y="607.50"></text></g><g><title>snappy::SnappyDecompressor::RefillTag (62 samples, 0.02%)</title><rect x="10.0009%" y="597" width="0.0157%" height="15" fill="rgb(251,123,47)" fg:x="39553" fg:w="62"/><text x="10.2509%" y="607.50"></text></g><g><title>std::time::Instant::elapsed (78 samples, 0.02%)</title><rect x="10.0259%" y="597" width="0.0197%" height="15" fill="rgb(221,13,13)" fg:x="39652" fg:w="78"/><text x="10.2759%" y="607.50"></text></g><g><title>[unknown] (7,520 samples, 1.90%)</title><rect x="8.1463%" y="613" width="1.9014%" height="15" fill="rgb(238,131,9)" fg:x="32218" fg:w="7520"/><text x="8.3963%" y="623.50">[..</text></g><g><title>__perf_event_task_sched_in (650 samples, 0.16%)</title><rect x="10.0598%" y="549" width="0.1644%" height="15" fill="rgb(211,50,8)" fg:x="39786" fg:w="650"/><text x="10.3098%" y="559.50"></text></g><g><title>x86_pmu_enable (643 samples, 0.16%)</title><rect x="10.0616%" y="533" width="0.1626%" height="15" fill="rgb(245,182,24)" fg:x="39793" fg:w="643"/><text x="10.3116%" y="543.50"></text></g><g><title>intel_tfa_pmu_enable_all (642 samples, 0.16%)</title><rect x="10.0618%" y="517" width="0.1623%" height="15" fill="rgb(242,14,37)" fg:x="39794" fg:w="642"/><text x="10.3118%" y="527.50"></text></g><g><title>native_write_msr (640 samples, 0.16%)</title><rect x="10.0624%" y="501" width="0.1618%" height="15" fill="rgb(246,228,12)" fg:x="39796" fg:w="640"/><text x="10.3124%" y="511.50"></text></g><g><title>schedule_tail (670 samples, 0.17%)</title><rect x="10.0560%" y="581" width="0.1694%" height="15" fill="rgb(213,55,15)" fg:x="39771" fg:w="670"/><text x="10.3060%" y="591.50"></text></g><g><title>finish_task_switch.isra.0 (660 samples, 0.17%)</title><rect x="10.0586%" y="565" width="0.1669%" height="15" fill="rgb(209,9,3)" fg:x="39781" fg:w="660"/><text x="10.3086%" y="575.50"></text></g><g><title>ret_from_fork (682 samples, 0.17%)</title><rect x="10.0560%" y="597" width="0.1724%" height="15" fill="rgb(230,59,30)" fg:x="39771" fg:w="682"/><text x="10.3060%" y="607.50"></text></g><g><title>down_read (42 samples, 0.01%)</title><rect x="10.2421%" y="117" width="0.0106%" height="15" fill="rgb(209,121,21)" fg:x="40507" fg:w="42"/><text x="10.4921%" y="127.50"></text></g><g><title>rwsem_down_read_slowpath (42 samples, 0.01%)</title><rect x="10.2421%" y="101" width="0.0106%" height="15" fill="rgb(220,109,13)" fg:x="40507" fg:w="42"/><text x="10.4921%" y="111.50"></text></g><g><title>schedule_preempt_disabled (41 samples, 0.01%)</title><rect x="10.2424%" y="85" width="0.0104%" height="15" fill="rgb(232,18,1)" fg:x="40508" fg:w="41"/><text x="10.4924%" y="95.50"></text></g><g><title>schedule (41 samples, 0.01%)</title><rect x="10.2424%" y="69" width="0.0104%" height="15" fill="rgb(215,41,42)" fg:x="40508" fg:w="41"/><text x="10.4924%" y="79.50"></text></g><g><title>__schedule (41 samples, 0.01%)</title><rect x="10.2424%" y="53" width="0.0104%" height="15" fill="rgb(224,123,36)" fg:x="40508" fg:w="41"/><text x="10.4924%" y="63.50"></text></g><g><title>copy_user_enhanced_fast_string (49 samples, 0.01%)</title><rect x="10.2419%" y="181" width="0.0124%" height="15" fill="rgb(240,125,3)" fg:x="40506" fg:w="49"/><text x="10.4919%" y="191.50"></text></g><g><title>asm_exc_page_fault (48 samples, 0.01%)</title><rect x="10.2421%" y="165" width="0.0121%" height="15" fill="rgb(205,98,50)" fg:x="40507" fg:w="48"/><text x="10.4921%" y="175.50"></text></g><g><title>exc_page_fault (48 samples, 0.01%)</title><rect x="10.2421%" y="149" width="0.0121%" height="15" fill="rgb(205,185,37)" fg:x="40507" fg:w="48"/><text x="10.4921%" y="159.50"></text></g><g><title>do_user_addr_fault (48 samples, 0.01%)</title><rect x="10.2421%" y="133" width="0.0121%" height="15" fill="rgb(238,207,15)" fg:x="40507" fg:w="48"/><text x="10.4921%" y="143.50"></text></g><g><title>__x64_sys_pread64 (51 samples, 0.01%)</title><rect x="10.2416%" y="277" width="0.0129%" height="15" fill="rgb(213,199,42)" fg:x="40505" fg:w="51"/><text x="10.4916%" y="287.50"></text></g><g><title>vfs_read (51 samples, 0.01%)</title><rect x="10.2416%" y="261" width="0.0129%" height="15" fill="rgb(235,201,11)" fg:x="40505" fg:w="51"/><text x="10.4916%" y="271.50"></text></g><g><title>new_sync_read (51 samples, 0.01%)</title><rect x="10.2416%" y="245" width="0.0129%" height="15" fill="rgb(207,46,11)" fg:x="40505" fg:w="51"/><text x="10.4916%" y="255.50"></text></g><g><title>ext4_file_read_iter (51 samples, 0.01%)</title><rect x="10.2416%" y="229" width="0.0129%" height="15" fill="rgb(241,35,35)" fg:x="40505" fg:w="51"/><text x="10.4916%" y="239.50"></text></g><g><title>generic_file_read_iter (51 samples, 0.01%)</title><rect x="10.2416%" y="213" width="0.0129%" height="15" fill="rgb(243,32,47)" fg:x="40505" fg:w="51"/><text x="10.4916%" y="223.50"></text></g><g><title>filemap_read (51 samples, 0.01%)</title><rect x="10.2416%" y="197" width="0.0129%" height="15" fill="rgb(247,202,23)" fg:x="40505" fg:w="51"/><text x="10.4916%" y="207.50"></text></g><g><title>rocksdb::RandomAccessFileReader::Read (52 samples, 0.01%)</title><rect x="10.2416%" y="373" width="0.0131%" height="15" fill="rgb(219,102,11)" fg:x="40505" fg:w="52"/><text x="10.4916%" y="383.50"></text></g><g><title>rocksdb::PosixRandomAccessFile::Read (52 samples, 0.01%)</title><rect x="10.2416%" y="357" width="0.0131%" height="15" fill="rgb(243,110,44)" fg:x="40505" fg:w="52"/><text x="10.4916%" y="367.50"></text></g><g><title>__libc_pread64 (52 samples, 0.01%)</title><rect x="10.2416%" y="341" width="0.0131%" height="15" fill="rgb(222,74,54)" fg:x="40505" fg:w="52"/><text x="10.4916%" y="351.50"></text></g><g><title>__libc_pread64 (52 samples, 0.01%)</title><rect x="10.2416%" y="325" width="0.0131%" height="15" fill="rgb(216,99,12)" fg:x="40505" fg:w="52"/><text x="10.4916%" y="335.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (52 samples, 0.01%)</title><rect x="10.2416%" y="309" width="0.0131%" height="15" fill="rgb(226,22,26)" fg:x="40505" fg:w="52"/><text x="10.4916%" y="319.50"></text></g><g><title>do_syscall_64 (52 samples, 0.01%)</title><rect x="10.2416%" y="293" width="0.0131%" height="15" fill="rgb(217,163,10)" fg:x="40505" fg:w="52"/><text x="10.4916%" y="303.50"></text></g><g><title>rocksdb::UncompressSerializedBlock (64 samples, 0.02%)</title><rect x="10.2548%" y="373" width="0.0162%" height="15" fill="rgb(213,25,53)" fg:x="40557" fg:w="64"/><text x="10.5048%" y="383.50"></text></g><g><title>rocksdb::UncompressBlockData (64 samples, 0.02%)</title><rect x="10.2548%" y="357" width="0.0162%" height="15" fill="rgb(252,105,26)" fg:x="40557" fg:w="64"/><text x="10.5048%" y="367.50"></text></g><g><title>snappy::RawUncompress (57 samples, 0.01%)</title><rect x="10.2565%" y="341" width="0.0144%" height="15" fill="rgb(220,39,43)" fg:x="40564" fg:w="57"/><text x="10.5065%" y="351.50"></text></g><g><title>snappy::RawUncompress (57 samples, 0.01%)</title><rect x="10.2565%" y="325" width="0.0144%" height="15" fill="rgb(229,68,48)" fg:x="40564" fg:w="57"/><text x="10.5065%" y="335.50"></text></g><g><title>snappy::SnappyDecompressor::DecompressAllTags&lt;snappy::SnappyArrayWriter&gt; (57 samples, 0.01%)</title><rect x="10.2565%" y="309" width="0.0144%" height="15" fill="rgb(252,8,32)" fg:x="40564" fg:w="57"/><text x="10.5065%" y="319.50"></text></g><g><title>snappy::DecompressBranchless&lt;char*&gt; (48 samples, 0.01%)</title><rect x="10.2588%" y="293" width="0.0121%" height="15" fill="rgb(223,20,43)" fg:x="40573" fg:w="48"/><text x="10.5088%" y="303.50"></text></g><g><title>rocksdb::BlockBasedTable::PrefetchIndexAndFilterBlocks (127 samples, 0.03%)</title><rect x="10.2391%" y="485" width="0.0321%" height="15" fill="rgb(229,81,49)" fg:x="40495" fg:w="127"/><text x="10.4891%" y="495.50"></text></g><g><title>rocksdb::BlockBasedTable::CreateIndexReader (127 samples, 0.03%)</title><rect x="10.2391%" y="469" width="0.0321%" height="15" fill="rgb(236,28,36)" fg:x="40495" fg:w="127"/><text x="10.4891%" y="479.50"></text></g><g><title>rocksdb::BinarySearchIndexReader::Create (127 samples, 0.03%)</title><rect x="10.2391%" y="453" width="0.0321%" height="15" fill="rgb(249,185,26)" fg:x="40495" fg:w="127"/><text x="10.4891%" y="463.50"></text></g><g><title>rocksdb::BlockBasedTable::IndexReaderCommon::ReadIndexBlock (127 samples, 0.03%)</title><rect x="10.2391%" y="437" width="0.0321%" height="15" fill="rgb(249,174,33)" fg:x="40495" fg:w="127"/><text x="10.4891%" y="447.50"></text></g><g><title>rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block_kIndex&gt; (127 samples, 0.03%)</title><rect x="10.2391%" y="421" width="0.0321%" height="15" fill="rgb(233,201,37)" fg:x="40495" fg:w="127"/><text x="10.4891%" y="431.50"></text></g><g><title>rocksdb::(anonymous namespace)::ReadAndParseBlockFromFile&lt;rocksdb::Block_kIndex&gt; (127 samples, 0.03%)</title><rect x="10.2391%" y="405" width="0.0321%" height="15" fill="rgb(221,78,26)" fg:x="40495" fg:w="127"/><text x="10.4891%" y="415.50"></text></g><g><title>rocksdb::BlockFetcher::ReadBlockContents (127 samples, 0.03%)</title><rect x="10.2391%" y="389" width="0.0321%" height="15" fill="rgb(250,127,30)" fg:x="40495" fg:w="127"/><text x="10.4891%" y="399.50"></text></g><g><title>rocksdb::BlockBasedTableFactory::NewTableReader (137 samples, 0.03%)</title><rect x="10.2388%" y="517" width="0.0346%" height="15" fill="rgb(230,49,44)" fg:x="40494" fg:w="137"/><text x="10.4888%" y="527.50"></text></g><g><title>rocksdb::BlockBasedTable::Open (137 samples, 0.03%)</title><rect x="10.2388%" y="501" width="0.0346%" height="15" fill="rgb(229,67,23)" fg:x="40494" fg:w="137"/><text x="10.4888%" y="511.50"></text></g><g><title>std::_Function_handler&lt;void (), rocksdb::VersionBuilder::Rep::LoadTableHandlers(rocksdb::InternalStats*, int, bool, bool, std::shared_ptr&lt;rocksdb::SliceTransform const&gt; const&amp;, unsigned long, rocksdb::ReadOptions const&amp;, unsigned char)::{lambda()#1}&gt;::_M_invoke (165 samples, 0.04%)</title><rect x="10.2320%" y="565" width="0.0417%" height="15" fill="rgb(249,83,47)" fg:x="40467" fg:w="165"/><text x="10.4820%" y="575.50"></text></g><g><title>rocksdb::TableCache::FindTable (165 samples, 0.04%)</title><rect x="10.2320%" y="549" width="0.0417%" height="15" fill="rgb(215,43,3)" fg:x="40467" fg:w="165"/><text x="10.4820%" y="559.50"></text></g><g><title>rocksdb::TableCache::GetTableReader (139 samples, 0.04%)</title><rect x="10.2386%" y="533" width="0.0351%" height="15" fill="rgb(238,154,13)" fg:x="40493" fg:w="139"/><text x="10.4886%" y="543.50"></text></g><g><title>[libstdc++.so.6.0.30] (203 samples, 0.05%)</title><rect x="10.2285%" y="581" width="0.0513%" height="15" fill="rgb(219,56,2)" fg:x="40453" fg:w="203"/><text x="10.4785%" y="591.50"></text></g><g><title>__perf_event_task_sched_in (63 samples, 0.02%)</title><rect x="10.2823%" y="389" width="0.0159%" height="15" fill="rgb(233,0,4)" fg:x="40666" fg:w="63"/><text x="10.5323%" y="399.50"></text></g><g><title>x86_pmu_enable (63 samples, 0.02%)</title><rect x="10.2823%" y="373" width="0.0159%" height="15" fill="rgb(235,30,7)" fg:x="40666" fg:w="63"/><text x="10.5323%" y="383.50"></text></g><g><title>intel_tfa_pmu_enable_all (63 samples, 0.02%)</title><rect x="10.2823%" y="357" width="0.0159%" height="15" fill="rgb(250,79,13)" fg:x="40666" fg:w="63"/><text x="10.5323%" y="367.50"></text></g><g><title>native_write_msr (63 samples, 0.02%)</title><rect x="10.2823%" y="341" width="0.0159%" height="15" fill="rgb(211,146,34)" fg:x="40666" fg:w="63"/><text x="10.5323%" y="351.50"></text></g><g><title>finish_task_switch.isra.0 (65 samples, 0.02%)</title><rect x="10.2821%" y="405" width="0.0164%" height="15" fill="rgb(228,22,38)" fg:x="40665" fg:w="65"/><text x="10.5321%" y="415.50"></text></g><g><title>down_read (79 samples, 0.02%)</title><rect x="10.2806%" y="485" width="0.0200%" height="15" fill="rgb(235,168,5)" fg:x="40659" fg:w="79"/><text x="10.5306%" y="495.50"></text></g><g><title>rwsem_down_read_slowpath (78 samples, 0.02%)</title><rect x="10.2808%" y="469" width="0.0197%" height="15" fill="rgb(221,155,16)" fg:x="40660" fg:w="78"/><text x="10.5308%" y="479.50"></text></g><g><title>schedule_preempt_disabled (78 samples, 0.02%)</title><rect x="10.2808%" y="453" width="0.0197%" height="15" fill="rgb(215,215,53)" fg:x="40660" fg:w="78"/><text x="10.5308%" y="463.50"></text></g><g><title>schedule (78 samples, 0.02%)</title><rect x="10.2808%" y="437" width="0.0197%" height="15" fill="rgb(223,4,10)" fg:x="40660" fg:w="78"/><text x="10.5308%" y="447.50"></text></g><g><title>__schedule (78 samples, 0.02%)</title><rect x="10.2808%" y="421" width="0.0197%" height="15" fill="rgb(234,103,6)" fg:x="40660" fg:w="78"/><text x="10.5308%" y="431.50"></text></g><g><title>do_madvise.part.0 (104 samples, 0.03%)</title><rect x="10.2806%" y="501" width="0.0263%" height="15" fill="rgb(227,97,0)" fg:x="40659" fg:w="104"/><text x="10.5306%" y="511.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (106 samples, 0.03%)</title><rect x="10.2806%" y="549" width="0.0268%" height="15" fill="rgb(234,150,53)" fg:x="40659" fg:w="106"/><text x="10.5306%" y="559.50"></text></g><g><title>do_syscall_64 (106 samples, 0.03%)</title><rect x="10.2806%" y="533" width="0.0268%" height="15" fill="rgb(228,201,54)" fg:x="40659" fg:w="106"/><text x="10.5306%" y="543.50"></text></g><g><title>__x64_sys_madvise (106 samples, 0.03%)</title><rect x="10.2806%" y="517" width="0.0268%" height="15" fill="rgb(222,22,37)" fg:x="40659" fg:w="106"/><text x="10.5306%" y="527.50"></text></g><g><title>advise_stack_range (108 samples, 0.03%)</title><rect x="10.2803%" y="581" width="0.0273%" height="15" fill="rgb(237,53,32)" fg:x="40658" fg:w="108"/><text x="10.5303%" y="591.50"></text></g><g><title>__GI_madvise (108 samples, 0.03%)</title><rect x="10.2803%" y="565" width="0.0273%" height="15" fill="rgb(233,25,53)" fg:x="40658" fg:w="108"/><text x="10.5303%" y="575.50"></text></g><g><title>finish_task_switch.isra.0 (54 samples, 0.01%)</title><rect x="10.3101%" y="405" width="0.0137%" height="15" fill="rgb(210,40,34)" fg:x="40776" fg:w="54"/><text x="10.5601%" y="415.50"></text></g><g><title>__perf_event_task_sched_in (54 samples, 0.01%)</title><rect x="10.3101%" y="389" width="0.0137%" height="15" fill="rgb(241,220,44)" fg:x="40776" fg:w="54"/><text x="10.5601%" y="399.50"></text></g><g><title>x86_pmu_enable (54 samples, 0.01%)</title><rect x="10.3101%" y="373" width="0.0137%" height="15" fill="rgb(235,28,35)" fg:x="40776" fg:w="54"/><text x="10.5601%" y="383.50"></text></g><g><title>intel_tfa_pmu_enable_all (54 samples, 0.01%)</title><rect x="10.3101%" y="357" width="0.0137%" height="15" fill="rgb(210,56,17)" fg:x="40776" fg:w="54"/><text x="10.5601%" y="367.50"></text></g><g><title>native_write_msr (54 samples, 0.01%)</title><rect x="10.3101%" y="341" width="0.0137%" height="15" fill="rgb(224,130,29)" fg:x="40776" fg:w="54"/><text x="10.5601%" y="351.50"></text></g><g><title>exit_mm (61 samples, 0.02%)</title><rect x="10.3089%" y="517" width="0.0154%" height="15" fill="rgb(235,212,8)" fg:x="40771" fg:w="61"/><text x="10.5589%" y="527.50"></text></g><g><title>mmap_read_lock (59 samples, 0.01%)</title><rect x="10.3094%" y="501" width="0.0149%" height="15" fill="rgb(223,33,50)" fg:x="40773" fg:w="59"/><text x="10.5594%" y="511.50"></text></g><g><title>down_read (59 samples, 0.01%)</title><rect x="10.3094%" y="485" width="0.0149%" height="15" fill="rgb(219,149,13)" fg:x="40773" fg:w="59"/><text x="10.5594%" y="495.50"></text></g><g><title>rwsem_down_read_slowpath (59 samples, 0.01%)</title><rect x="10.3094%" y="469" width="0.0149%" height="15" fill="rgb(250,156,29)" fg:x="40773" fg:w="59"/><text x="10.5594%" y="479.50"></text></g><g><title>schedule_preempt_disabled (59 samples, 0.01%)</title><rect x="10.3094%" y="453" width="0.0149%" height="15" fill="rgb(216,193,19)" fg:x="40773" fg:w="59"/><text x="10.5594%" y="463.50"></text></g><g><title>schedule (59 samples, 0.01%)</title><rect x="10.3094%" y="437" width="0.0149%" height="15" fill="rgb(216,135,14)" fg:x="40773" fg:w="59"/><text x="10.5594%" y="447.50"></text></g><g><title>__schedule (59 samples, 0.01%)</title><rect x="10.3094%" y="421" width="0.0149%" height="15" fill="rgb(241,47,5)" fg:x="40773" fg:w="59"/><text x="10.5594%" y="431.50"></text></g><g><title>__x64_sys_exit (62 samples, 0.02%)</title><rect x="10.3089%" y="549" width="0.0157%" height="15" fill="rgb(233,42,35)" fg:x="40771" fg:w="62"/><text x="10.5589%" y="559.50"></text></g><g><title>do_exit (62 samples, 0.02%)</title><rect x="10.3089%" y="533" width="0.0157%" height="15" fill="rgb(231,13,6)" fg:x="40771" fg:w="62"/><text x="10.5589%" y="543.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (67 samples, 0.02%)</title><rect x="10.3084%" y="581" width="0.0169%" height="15" fill="rgb(207,181,40)" fg:x="40769" fg:w="67"/><text x="10.5584%" y="591.50"></text></g><g><title>do_syscall_64 (66 samples, 0.02%)</title><rect x="10.3086%" y="565" width="0.0167%" height="15" fill="rgb(254,173,49)" fg:x="40770" fg:w="66"/><text x="10.5586%" y="575.50"></text></g><g><title>do_user_addr_fault (51 samples, 0.01%)</title><rect x="10.3329%" y="485" width="0.0129%" height="15" fill="rgb(221,1,38)" fg:x="40866" fg:w="51"/><text x="10.5829%" y="495.50"></text></g><g><title>asm_exc_page_fault (58 samples, 0.01%)</title><rect x="10.3329%" y="517" width="0.0147%" height="15" fill="rgb(206,124,46)" fg:x="40866" fg:w="58"/><text x="10.5829%" y="527.50"></text></g><g><title>exc_page_fault (58 samples, 0.01%)</title><rect x="10.3329%" y="501" width="0.0147%" height="15" fill="rgb(249,21,11)" fg:x="40866" fg:w="58"/><text x="10.5829%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (97 samples, 0.02%)</title><rect x="10.3256%" y="533" width="0.0245%" height="15" fill="rgb(222,201,40)" fg:x="40837" fg:w="97"/><text x="10.5756%" y="543.50"></text></g><g><title>&lt;[T] as rand::seq::SliceRandom&gt;::choose (211 samples, 0.05%)</title><rect x="12.2735%" y="517" width="0.0534%" height="15" fill="rgb(235,61,29)" fg:x="48541" fg:w="211"/><text x="12.5235%" y="527.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (59 samples, 0.01%)</title><rect x="12.3119%" y="501" width="0.0149%" height="15" fill="rgb(219,207,3)" fg:x="48693" fg:w="59"/><text x="12.5619%" y="511.50"></text></g><g><title>_int_free (128 samples, 0.03%)</title><rect x="12.3342%" y="501" width="0.0324%" height="15" fill="rgb(222,56,46)" fg:x="48781" fg:w="128"/><text x="12.5842%" y="511.50"></text></g><g><title>__GI___libc_free (186 samples, 0.05%)</title><rect x="12.3269%" y="517" width="0.0470%" height="15" fill="rgb(239,76,54)" fg:x="48752" fg:w="186"/><text x="12.5769%" y="527.50"></text></g><g><title>__irqentry_text_end (68 samples, 0.02%)</title><rect x="12.3739%" y="517" width="0.0172%" height="15" fill="rgb(231,124,27)" fg:x="48938" fg:w="68"/><text x="12.6239%" y="527.50"></text></g><g><title>down_read_trylock (42 samples, 0.01%)</title><rect x="12.4078%" y="469" width="0.0106%" height="15" fill="rgb(249,195,6)" fg:x="49072" fg:w="42"/><text x="12.6578%" y="479.50"></text></g><g><title>__count_memcg_events (51 samples, 0.01%)</title><rect x="12.4235%" y="453" width="0.0129%" height="15" fill="rgb(237,174,47)" fg:x="49134" fg:w="51"/><text x="12.6735%" y="463.50"></text></g><g><title>get_mem_cgroup_from_mm (111 samples, 0.03%)</title><rect x="12.4743%" y="389" width="0.0281%" height="15" fill="rgb(206,201,31)" fg:x="49335" fg:w="111"/><text x="12.7243%" y="399.50"></text></g><g><title>__mem_cgroup_charge (150 samples, 0.04%)</title><rect x="12.4647%" y="405" width="0.0379%" height="15" fill="rgb(231,57,52)" fg:x="49297" fg:w="150"/><text x="12.7147%" y="415.50"></text></g><g><title>__alloc_pages (144 samples, 0.04%)</title><rect x="12.5041%" y="389" width="0.0364%" height="15" fill="rgb(248,177,22)" fg:x="49453" fg:w="144"/><text x="12.7541%" y="399.50"></text></g><g><title>get_page_from_freelist (102 samples, 0.03%)</title><rect x="12.5147%" y="373" width="0.0258%" height="15" fill="rgb(215,211,37)" fg:x="49495" fg:w="102"/><text x="12.7647%" y="383.50"></text></g><g><title>alloc_pages_vma (168 samples, 0.04%)</title><rect x="12.5026%" y="405" width="0.0425%" height="15" fill="rgb(241,128,51)" fg:x="49447" fg:w="168"/><text x="12.7526%" y="415.50"></text></g><g><title>page_add_new_anon_rmap (53 samples, 0.01%)</title><rect x="12.5516%" y="405" width="0.0134%" height="15" fill="rgb(227,165,31)" fg:x="49641" fg:w="53"/><text x="12.8016%" y="415.50"></text></g><g><title>__mod_lruvec_page_state (53 samples, 0.01%)</title><rect x="12.5516%" y="389" width="0.0134%" height="15" fill="rgb(228,167,24)" fg:x="49641" fg:w="53"/><text x="12.8016%" y="399.50"></text></g><g><title>do_anonymous_page (442 samples, 0.11%)</title><rect x="12.4538%" y="421" width="0.1118%" height="15" fill="rgb(228,143,12)" fg:x="49254" fg:w="442"/><text x="12.7038%" y="431.50"></text></g><g><title>do_numa_page (47 samples, 0.01%)</title><rect x="12.5656%" y="421" width="0.0119%" height="15" fill="rgb(249,149,8)" fg:x="49696" fg:w="47"/><text x="12.8156%" y="431.50"></text></g><g><title>handle_pte_fault (515 samples, 0.13%)</title><rect x="12.4475%" y="437" width="0.1302%" height="15" fill="rgb(243,35,44)" fg:x="49229" fg:w="515"/><text x="12.6975%" y="447.50"></text></g><g><title>__handle_mm_fault (561 samples, 0.14%)</title><rect x="12.4363%" y="453" width="0.1418%" height="15" fill="rgb(246,89,9)" fg:x="49185" fg:w="561"/><text x="12.6863%" y="463.50"></text></g><g><title>handle_mm_fault (639 samples, 0.16%)</title><rect x="12.4214%" y="469" width="0.1616%" height="15" fill="rgb(233,213,13)" fg:x="49126" fg:w="639"/><text x="12.6714%" y="479.50"></text></g><g><title>do_user_addr_fault (708 samples, 0.18%)</title><rect x="12.4065%" y="485" width="0.1790%" height="15" fill="rgb(233,141,41)" fg:x="49067" fg:w="708"/><text x="12.6565%" y="495.50"></text></g><g><title>irqentry_exit (86 samples, 0.02%)</title><rect x="12.5858%" y="485" width="0.0217%" height="15" fill="rgb(239,167,4)" fg:x="49776" fg:w="86"/><text x="12.8358%" y="495.50"></text></g><g><title>irqentry_exit_to_user_mode (86 samples, 0.02%)</title><rect x="12.5858%" y="469" width="0.0217%" height="15" fill="rgb(209,217,16)" fg:x="49776" fg:w="86"/><text x="12.8358%" y="479.50"></text></g><g><title>exc_page_fault (822 samples, 0.21%)</title><rect x="12.4022%" y="501" width="0.2078%" height="15" fill="rgb(219,88,35)" fg:x="49050" fg:w="822"/><text x="12.6522%" y="511.50"></text></g><g><title>asm_exc_page_fault (823 samples, 0.21%)</title><rect x="12.4022%" y="517" width="0.2081%" height="15" fill="rgb(220,193,23)" fg:x="49050" fg:w="823"/><text x="12.6522%" y="527.50"></text></g><g><title>chrono::naive::date::NaiveDate::from_num_days_from_ce_opt (643 samples, 0.16%)</title><rect x="12.6841%" y="501" width="0.1626%" height="15" fill="rgb(230,90,52)" fg:x="50165" fg:w="643"/><text x="12.9341%" y="511.50"></text></g><g><title>[[vdso]] (615 samples, 0.16%)</title><rect x="12.8604%" y="469" width="0.1555%" height="15" fill="rgb(252,106,19)" fg:x="50862" fg:w="615"/><text x="13.1104%" y="479.50"></text></g><g><title>[[vdso]] (412 samples, 0.10%)</title><rect x="12.9117%" y="453" width="0.1042%" height="15" fill="rgb(206,74,20)" fg:x="51065" fg:w="412"/><text x="13.1617%" y="463.50"></text></g><g><title>__GI___clock_gettime (645 samples, 0.16%)</title><rect x="12.8548%" y="485" width="0.1631%" height="15" fill="rgb(230,138,44)" fg:x="50840" fg:w="645"/><text x="13.1048%" y="495.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (687 samples, 0.17%)</title><rect x="12.8467%" y="501" width="0.1737%" height="15" fill="rgb(235,182,43)" fg:x="50808" fg:w="687"/><text x="13.0967%" y="511.50"></text></g><g><title>std::time::SystemTime::duration_since (323 samples, 0.08%)</title><rect x="13.0204%" y="501" width="0.0817%" height="15" fill="rgb(242,16,51)" fg:x="51495" fg:w="323"/><text x="13.2704%" y="511.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::sub_timespec (67 samples, 0.02%)</title><rect x="13.0852%" y="485" width="0.0169%" height="15" fill="rgb(248,9,4)" fg:x="51751" fg:w="67"/><text x="13.3352%" y="495.50"></text></g><g><title>chrono::offset::utc::Utc::now (1,943 samples, 0.49%)</title><rect x="12.6133%" y="517" width="0.4913%" height="15" fill="rgb(210,31,22)" fg:x="49885" fg:w="1943"/><text x="12.8633%" y="527.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (109 samples, 0.03%)</title><rect x="13.1170%" y="517" width="0.0276%" height="15" fill="rgb(239,54,39)" fg:x="51877" fg:w="109"/><text x="13.3670%" y="527.50"></text></g><g><title>operator new (255 samples, 0.06%)</title><rect x="14.2472%" y="469" width="0.0645%" height="15" fill="rgb(230,99,41)" fg:x="56347" fg:w="255"/><text x="14.4972%" y="479.50"></text></g><g><title>__GI___libc_malloc (206 samples, 0.05%)</title><rect x="14.2596%" y="453" width="0.0521%" height="15" fill="rgb(253,106,12)" fg:x="56396" fg:w="206"/><text x="14.5096%" y="463.50"></text></g><g><title>tcache_get (85 samples, 0.02%)</title><rect x="14.2902%" y="437" width="0.0215%" height="15" fill="rgb(213,46,41)" fg:x="56517" fg:w="85"/><text x="14.5402%" y="447.50"></text></g><g><title>&lt;rocksdb::db_options::ReadOptions as core::default::Default&gt;::default (528 samples, 0.13%)</title><rect x="14.1820%" y="501" width="0.1335%" height="15" fill="rgb(215,133,35)" fg:x="56089" fg:w="528"/><text x="14.4320%" y="511.50"></text></g><g><title>rocksdb_readoptions_create (504 samples, 0.13%)</title><rect x="14.1881%" y="485" width="0.1274%" height="15" fill="rgb(213,28,5)" fg:x="56113" fg:w="504"/><text x="14.4381%" y="495.50"></text></g><g><title>&lt;rocksdb::db_pinnable_slice::DBPinnableSlice as core::convert::AsRef&lt;[u8]&gt;&gt;::as_ref (57 samples, 0.01%)</title><rect x="14.3155%" y="501" width="0.0144%" height="15" fill="rgb(215,77,49)" fg:x="56617" fg:w="57"/><text x="14.5655%" y="511.50"></text></g><g><title>_int_free (115 samples, 0.03%)</title><rect x="14.3491%" y="485" width="0.0291%" height="15" fill="rgb(248,100,22)" fg:x="56750" fg:w="115"/><text x="14.5991%" y="495.50"></text></g><g><title>__GI___libc_free (195 samples, 0.05%)</title><rect x="14.3385%" y="501" width="0.0493%" height="15" fill="rgb(208,67,9)" fg:x="56708" fg:w="195"/><text x="14.5885%" y="511.50"></text></g><g><title>__GI___libc_malloc (92 samples, 0.02%)</title><rect x="14.3878%" y="501" width="0.0233%" height="15" fill="rgb(219,133,21)" fg:x="56903" fg:w="92"/><text x="14.6378%" y="511.50"></text></g><g><title>tcache_get (45 samples, 0.01%)</title><rect x="14.3997%" y="485" width="0.0114%" height="15" fill="rgb(246,46,29)" fg:x="56950" fg:w="45"/><text x="14.6497%" y="495.50"></text></g><g><title>__memcpy_evex_unaligned_erms (139 samples, 0.04%)</title><rect x="14.4111%" y="501" width="0.0351%" height="15" fill="rgb(246,185,52)" fg:x="56995" fg:w="139"/><text x="14.6611%" y="511.50"></text></g><g><title>_int_free (130 samples, 0.03%)</title><rect x="14.4789%" y="469" width="0.0329%" height="15" fill="rgb(252,136,11)" fg:x="57263" fg:w="130"/><text x="14.7289%" y="479.50"></text></g><g><title>__GI___libc_free (210 samples, 0.05%)</title><rect x="14.4695%" y="485" width="0.0531%" height="15" fill="rgb(219,138,53)" fg:x="57226" fg:w="210"/><text x="14.7195%" y="495.50"></text></g><g><title>arena_for_chunk (43 samples, 0.01%)</title><rect x="14.5117%" y="469" width="0.0109%" height="15" fill="rgb(211,51,23)" fg:x="57393" fg:w="43"/><text x="14.7617%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;rocksdb::db_options::ReadOptions&gt; (336 samples, 0.08%)</title><rect x="14.4546%" y="501" width="0.0850%" height="15" fill="rgb(247,221,28)" fg:x="57167" fg:w="336"/><text x="14.7046%" y="511.50"></text></g><g><title>operator new (170 samples, 0.04%)</title><rect x="14.7074%" y="485" width="0.0430%" height="15" fill="rgb(251,222,45)" fg:x="58167" fg:w="170"/><text x="14.9574%" y="495.50"></text></g><g><title>__GI___libc_malloc (144 samples, 0.04%)</title><rect x="14.7140%" y="469" width="0.0364%" height="15" fill="rgb(217,162,53)" fg:x="58193" fg:w="144"/><text x="14.9640%" y="479.50"></text></g><g><title>tcache_get (73 samples, 0.02%)</title><rect x="14.7320%" y="453" width="0.0185%" height="15" fill="rgb(229,93,14)" fg:x="58264" fg:w="73"/><text x="14.9820%" y="463.50"></text></g><g><title>__tls_init (101 samples, 0.03%)</title><rect x="15.4495%" y="421" width="0.0255%" height="15" fill="rgb(209,67,49)" fg:x="61102" fg:w="101"/><text x="15.6995%" y="431.50"></text></g><g><title>rocksdb::ThreadLocalPtr::StaticMeta::Swap (594 samples, 0.15%)</title><rect x="15.4913%" y="405" width="0.1502%" height="15" fill="rgb(213,87,29)" fg:x="61267" fg:w="594"/><text x="15.7413%" y="415.50"></text></g><g><title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion (649 samples, 0.16%)</title><rect x="15.4854%" y="421" width="0.1641%" height="15" fill="rgb(205,151,52)" fg:x="61244" fg:w="649"/><text x="15.7354%" y="431.50"></text></g><g><title>rocksdb::DBImpl::FailIfCfHasTs (319 samples, 0.08%)</title><rect x="15.6528%" y="421" width="0.0807%" height="15" fill="rgb(253,215,39)" fg:x="61906" fg:w="319"/><text x="15.9028%" y="431.50"></text></g><g><title>rocksdb::ColumnFamilyHandleImpl::GetComparator (42 samples, 0.01%)</title><rect x="15.7229%" y="405" width="0.0106%" height="15" fill="rgb(221,220,41)" fg:x="62183" fg:w="42"/><text x="15.9729%" y="415.50"></text></g><g><title>rocksdb::ThreadLocalPtr::CompareAndSwap (223 samples, 0.06%)</title><rect x="15.7585%" y="389" width="0.0564%" height="15" fill="rgb(218,133,21)" fg:x="62324" fg:w="223"/><text x="16.0085%" y="399.50"></text></g><g><title>rocksdb::ThreadLocalPtr::Instance (144 samples, 0.04%)</title><rect x="15.7785%" y="373" width="0.0364%" height="15" fill="rgb(221,193,43)" fg:x="62403" fg:w="144"/><text x="16.0285%" y="383.50"></text></g><g><title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion (1,092 samples, 0.28%)</title><rect x="15.7433%" y="421" width="0.2761%" height="15" fill="rgb(240,128,52)" fg:x="62264" fg:w="1092"/><text x="15.9933%" y="431.50"></text></g><g><title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion (1,082 samples, 0.27%)</title><rect x="15.7459%" y="405" width="0.2736%" height="15" fill="rgb(253,114,12)" fg:x="62274" fg:w="1082"/><text x="15.9959%" y="415.50"></text></g><g><title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap (809 samples, 0.20%)</title><rect x="15.8149%" y="389" width="0.2046%" height="15" fill="rgb(215,223,47)" fg:x="62547" fg:w="809"/><text x="16.0649%" y="399.50"></text></g><g><title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal (83 samples, 0.02%)</title><rect x="15.9985%" y="373" width="0.0210%" height="15" fill="rgb(248,225,23)" fg:x="63273" fg:w="83"/><text x="16.2485%" y="383.50"></text></g><g><title>__memcpy_evex_unaligned_erms (47 samples, 0.01%)</title><rect x="16.0468%" y="405" width="0.0119%" height="15" fill="rgb(250,108,0)" fg:x="63464" fg:w="47"/><text x="16.2968%" y="415.50"></text></g><g><title>rocksdb::LookupKey::LookupKey (176 samples, 0.04%)</title><rect x="16.0195%" y="421" width="0.0445%" height="15" fill="rgb(228,208,7)" fg:x="63356" fg:w="176"/><text x="16.2695%" y="431.50"></text></g><g><title>rocksdb::MemTable::Get (204 samples, 0.05%)</title><rect x="16.0640%" y="421" width="0.0516%" height="15" fill="rgb(244,45,10)" fg:x="63532" fg:w="204"/><text x="16.3140%" y="431.50"></text></g><g><title>rocksdb::MemTableListVersion::Get (170 samples, 0.04%)</title><rect x="16.1155%" y="421" width="0.0430%" height="15" fill="rgb(207,125,25)" fg:x="63736" fg:w="170"/><text x="16.3655%" y="431.50"></text></g><g><title>rocksdb::MemTableListVersion::GetFromList (131 samples, 0.03%)</title><rect x="16.1254%" y="405" width="0.0331%" height="15" fill="rgb(210,195,18)" fg:x="63775" fg:w="131"/><text x="16.3754%" y="415.50"></text></g><g><title>rocksdb::MergeContext::~MergeContext (43 samples, 0.01%)</title><rect x="16.1585%" y="421" width="0.0109%" height="15" fill="rgb(249,80,12)" fg:x="63906" fg:w="43"/><text x="16.4085%" y="431.50"></text></g><g><title>rocksdb::Status::operator= (90 samples, 0.02%)</title><rect x="16.1775%" y="421" width="0.0228%" height="15" fill="rgb(221,65,9)" fg:x="63981" fg:w="90"/><text x="16.4275%" y="431.50"></text></g><g><title>rocksdb::StopWatch::~StopWatch (50 samples, 0.01%)</title><rect x="16.2002%" y="421" width="0.0126%" height="15" fill="rgb(235,49,36)" fg:x="64071" fg:w="50"/><text x="16.4502%" y="431.50"></text></g><g><title>rocksdb::(anonymous namespace)::FilePicker::GetNextFile (279 samples, 0.07%)</title><rect x="17.1034%" y="405" width="0.0705%" height="15" fill="rgb(225,32,20)" fg:x="67643" fg:w="279"/><text x="17.3534%" y="415.50"></text></g><g><title>rocksdb::GetContext::GetContext (950 samples, 0.24%)</title><rect x="17.1765%" y="405" width="0.2402%" height="15" fill="rgb(215,141,46)" fg:x="67932" fg:w="950"/><text x="17.4265%" y="415.50"></text></g><g><title>rocksdb::Random::GetTLSInstance (73 samples, 0.02%)</title><rect x="17.3982%" y="389" width="0.0185%" height="15" fill="rgb(250,160,47)" fg:x="68809" fg:w="73"/><text x="17.6482%" y="399.50"></text></g><g><title>rocksdb::Status::operator= (220 samples, 0.06%)</title><rect x="17.4261%" y="405" width="0.0556%" height="15" fill="rgb(216,222,40)" fg:x="68919" fg:w="220"/><text x="17.6761%" y="415.50"></text></g><g><title>operator new (310 samples, 0.08%)</title><rect x="20.2099%" y="341" width="0.0784%" height="15" fill="rgb(234,217,39)" fg:x="79929" fg:w="310"/><text x="20.4599%" y="351.50"></text></g><g><title>__GI___libc_malloc (277 samples, 0.07%)</title><rect x="20.2183%" y="325" width="0.0700%" height="15" fill="rgb(207,178,40)" fg:x="79962" fg:w="277"/><text x="20.4683%" y="335.50"></text></g><g><title>tcache_get (136 samples, 0.03%)</title><rect x="20.2539%" y="309" width="0.0344%" height="15" fill="rgb(221,136,13)" fg:x="80103" fg:w="136"/><text x="20.5039%" y="319.50"></text></g><g><title>rocksdb::Block::NewIndexIterator (1,058 samples, 0.27%)</title><rect x="20.0263%" y="357" width="0.2675%" height="15" fill="rgb(249,199,10)" fg:x="79203" fg:w="1058"/><text x="20.2763%" y="367.50"></text></g><g><title>rocksdb::BinarySearchIndexReader::NewIterator (2,532 samples, 0.64%)</title><rect x="19.7449%" y="373" width="0.6402%" height="15" fill="rgb(249,222,13)" fg:x="78090" fg:w="2532"/><text x="19.9949%" y="383.50"></text></g><g><title>rocksdb::BlockBasedTable::IndexReaderCommon::GetOrReadIndexBlock (361 samples, 0.09%)</title><rect x="20.2939%" y="357" width="0.0913%" height="15" fill="rgb(244,185,38)" fg:x="80261" fg:w="361"/><text x="20.5439%" y="367.50"></text></g><g><title>rocksdb::BlockBasedTable::FullFilterKeyMayMatch (153 samples, 0.04%)</title><rect x="20.3851%" y="373" width="0.0387%" height="15" fill="rgb(236,202,9)" fg:x="80622" fg:w="153"/><text x="20.6351%" y="383.50"></text></g><g><title>__tls_init (104 samples, 0.03%)</title><rect x="20.7083%" y="357" width="0.0263%" height="15" fill="rgb(250,229,37)" fg:x="81900" fg:w="104"/><text x="20.9583%" y="367.50"></text></g><g><title>__GI___libc_malloc (569 samples, 0.14%)</title><rect x="21.3629%" y="309" width="0.1439%" height="15" fill="rgb(206,174,23)" fg:x="84489" fg:w="569"/><text x="21.6129%" y="319.50"></text></g><g><title>tcache_get (376 samples, 0.10%)</title><rect x="21.4117%" y="293" width="0.0951%" height="15" fill="rgb(211,33,43)" fg:x="84682" fg:w="376"/><text x="21.6617%" y="303.50"></text></g><g><title>operator new (606 samples, 0.15%)</title><rect x="21.3538%" y="325" width="0.1532%" height="15" fill="rgb(245,58,50)" fg:x="84453" fg:w="606"/><text x="21.6038%" y="335.50"></text></g><g><title>rocksdb::BlockBasedTable::InitBlockIterator&lt;rocksdb::DataBlockIter&gt; (3,074 samples, 0.78%)</title><rect x="20.7356%" y="357" width="0.7773%" height="15" fill="rgb(244,68,36)" fg:x="82008" fg:w="3074"/><text x="20.9856%" y="367.50"></text></g><g><title>rocksdb::Block::NewDataIterator (2,866 samples, 0.72%)</title><rect x="20.7882%" y="341" width="0.7247%" height="15" fill="rgb(232,229,15)" fg:x="82216" fg:w="2866"/><text x="21.0382%" y="351.50"></text></g><g><title>rocksdb::BlockBasedTable::GetCacheKey (52 samples, 0.01%)</title><rect x="22.6722%" y="325" width="0.0131%" height="15" fill="rgb(254,30,23)" fg:x="89667" fg:w="52"/><text x="22.9222%" y="335.50"></text></g><g><title>rocksdb::BlockBasedTable::UpdateCacheHitMetrics (143 samples, 0.04%)</title><rect x="22.9015%" y="309" width="0.0362%" height="15" fill="rgb(235,160,14)" fg:x="90574" fg:w="143"/><text x="23.1515%" y="319.50"></text></g><g><title>rocksdb::BlockBasedTable::UpdateCacheMissMetrics (220 samples, 0.06%)</title><rect x="22.9376%" y="309" width="0.0556%" height="15" fill="rgb(212,155,44)" fg:x="90717" fg:w="220"/><text x="23.1876%" y="319.50"></text></g><g><title>rocksdb::Hash64 (192 samples, 0.05%)</title><rect x="23.0213%" y="293" width="0.0485%" height="15" fill="rgb(226,2,50)" fg:x="91048" fg:w="192"/><text x="23.2713%" y="303.50"></text></g><g><title>handle_mm_fault (44 samples, 0.01%)</title><rect x="23.2600%" y="213" width="0.0111%" height="15" fill="rgb(234,177,6)" fg:x="91992" fg:w="44"/><text x="23.5100%" y="223.50"></text></g><g><title>do_user_addr_fault (53 samples, 0.01%)</title><rect x="23.2580%" y="229" width="0.0134%" height="15" fill="rgb(217,24,9)" fg:x="91984" fg:w="53"/><text x="23.5080%" y="239.50"></text></g><g><title>asm_exc_page_fault (73 samples, 0.02%)</title><rect x="23.2572%" y="261" width="0.0185%" height="15" fill="rgb(220,13,46)" fg:x="91981" fg:w="73"/><text x="23.5072%" y="271.50"></text></g><g><title>exc_page_fault (73 samples, 0.02%)</title><rect x="23.2572%" y="245" width="0.0185%" height="15" fill="rgb(239,221,27)" fg:x="91981" fg:w="73"/><text x="23.5072%" y="255.50"></text></g><g><title>rocksdb::lru_cache::LRUCacheShard::LRU_Remove (694 samples, 0.18%)</title><rect x="23.1045%" y="277" width="0.1755%" height="15" fill="rgb(222,198,25)" fg:x="91377" fg:w="694"/><text x="23.3545%" y="287.50"></text></g><g><title>__memcmp_evex_movbe (1,164 samples, 0.29%)</title><rect x="25.3066%" y="245" width="0.2943%" height="15" fill="rgb(211,99,13)" fg:x="100086" fg:w="1164"/><text x="25.5566%" y="255.50"></text></g><g><title>do_numa_page (52 samples, 0.01%)</title><rect x="25.6102%" y="149" width="0.0131%" height="15" fill="rgb(232,111,31)" fg:x="101287" fg:w="52"/><text x="25.8602%" y="159.50"></text></g><g><title>__handle_mm_fault (67 samples, 0.02%)</title><rect x="25.6067%" y="181" width="0.0169%" height="15" fill="rgb(245,82,37)" fg:x="101273" fg:w="67"/><text x="25.8567%" y="191.50"></text></g><g><title>handle_pte_fault (60 samples, 0.02%)</title><rect x="25.6085%" y="165" width="0.0152%" height="15" fill="rgb(227,149,46)" fg:x="101280" fg:w="60"/><text x="25.8585%" y="175.50"></text></g><g><title>handle_mm_fault (71 samples, 0.02%)</title><rect x="25.6060%" y="197" width="0.0180%" height="15" fill="rgb(218,36,50)" fg:x="101270" fg:w="71"/><text x="25.8560%" y="207.50"></text></g><g><title>do_user_addr_fault (90 samples, 0.02%)</title><rect x="25.6017%" y="213" width="0.0228%" height="15" fill="rgb(226,80,48)" fg:x="101253" fg:w="90"/><text x="25.8517%" y="223.50"></text></g><g><title>asm_exc_page_fault (127 samples, 0.03%)</title><rect x="25.6009%" y="245" width="0.0321%" height="15" fill="rgb(238,224,15)" fg:x="101250" fg:w="127"/><text x="25.8509%" y="255.50"></text></g><g><title>exc_page_fault (126 samples, 0.03%)</title><rect x="25.6011%" y="229" width="0.0319%" height="15" fill="rgb(241,136,10)" fg:x="101251" fg:w="126"/><text x="25.8511%" y="239.50"></text></g><g><title>rocksdb::lru_cache::LRUHandleTable::Lookup (9,342 samples, 2.36%)</title><rect x="23.2800%" y="277" width="2.3621%" height="15" fill="rgb(208,32,45)" fg:x="92071" fg:w="9342"/><text x="23.5300%" y="287.50">ro..</text></g><g><title>rocksdb::lru_cache::LRUHandleTable::FindPointer (9,303 samples, 2.35%)</title><rect x="23.2899%" y="261" width="2.3522%" height="15" fill="rgb(207,135,9)" fg:x="92110" fg:w="9303"/><text x="23.5399%" y="271.50">r..</text></g><g><title>___pthread_mutex_lock (1,249 samples, 0.32%)</title><rect x="25.6606%" y="261" width="0.3158%" height="15" fill="rgb(206,86,44)" fg:x="101486" fg:w="1249"/><text x="25.9106%" y="271.50"></text></g><g><title>lll_mutex_lock_optimized (740 samples, 0.19%)</title><rect x="25.7893%" y="245" width="0.1871%" height="15" fill="rgb(245,177,15)" fg:x="101995" fg:w="740"/><text x="26.0393%" y="255.50"></text></g><g><title>rocksdb::port::Mutex::Lock (1,323 samples, 0.33%)</title><rect x="25.6421%" y="277" width="0.3345%" height="15" fill="rgb(206,64,50)" fg:x="101413" fg:w="1323"/><text x="25.8921%" y="287.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (2,473 samples, 0.63%)</title><rect x="26.0037%" y="245" width="0.6253%" height="15" fill="rgb(234,36,40)" fg:x="102843" fg:w="2473"/><text x="26.2537%" y="255.50"></text></g><g><title>lll_mutex_unlock_optimized (2,375 samples, 0.60%)</title><rect x="26.0285%" y="229" width="0.6005%" height="15" fill="rgb(213,64,8)" fg:x="102941" fg:w="2375"/><text x="26.2785%" y="239.50"></text></g><g><title>rocksdb::lru_cache::LRUCacheShard::Lookup (14,077 samples, 3.56%)</title><rect x="23.0699%" y="293" width="3.5593%" height="15" fill="rgb(210,75,36)" fg:x="91240" fg:w="14077"/><text x="23.3199%" y="303.50">rock..</text></g><g><title>rocksdb::port::Mutex::Unlock (2,581 samples, 0.65%)</title><rect x="25.9766%" y="277" width="0.6526%" height="15" fill="rgb(229,88,21)" fg:x="102736" fg:w="2581"/><text x="26.2266%" y="287.50"></text></g><g><title>___pthread_mutex_unlock (2,474 samples, 0.63%)</title><rect x="26.0037%" y="261" width="0.6255%" height="15" fill="rgb(252,204,47)" fg:x="102843" fg:w="2474"/><text x="26.2537%" y="271.50"></text></g><g><title>rocksdb::ShardedCache&lt;rocksdb::lru_cache::LRUCacheShard&gt;::Lookup (14,438 samples, 3.65%)</title><rect x="22.9933%" y="309" width="3.6506%" height="15" fill="rgb(208,77,27)" fg:x="90937" fg:w="14438"/><text x="23.2433%" y="319.50">rock..</text></g><g><title>rocksdb::lru_cache::LRUCache::Value (85 samples, 0.02%)</title><rect x="26.6495%" y="309" width="0.0215%" height="15" fill="rgb(221,76,26)" fg:x="105397" fg:w="85"/><text x="26.8995%" y="319.50"></text></g><g><title>rocksdb::BlockBasedTable::GetDataBlockFromCache&lt;rocksdb::Block_kData&gt; (15,764 samples, 3.99%)</title><rect x="22.6853%" y="325" width="3.9859%" height="15" fill="rgb(225,139,18)" fg:x="89719" fg:w="15764"/><text x="22.9353%" y="335.50">rock..</text></g><g><title>rocksdb::Block::ApproximateMemoryUsage (66 samples, 0.02%)</title><rect x="26.8669%" y="309" width="0.0167%" height="15" fill="rgb(230,137,11)" fg:x="106257" fg:w="66"/><text x="27.1169%" y="319.50"></text></g><g><title>rocksdb::Block::InitializeDataBlockProtectionInfo (85 samples, 0.02%)</title><rect x="26.8836%" y="309" width="0.0215%" height="15" fill="rgb(212,28,1)" fg:x="106323" fg:w="85"/><text x="27.1336%" y="319.50"></text></g><g><title>rocksdb::BlockBasedTable::UpdateCacheInsertionMetrics (111 samples, 0.03%)</title><rect x="26.9051%" y="309" width="0.0281%" height="15" fill="rgb(248,164,17)" fg:x="106408" fg:w="111"/><text x="27.1551%" y="319.50"></text></g><g><title>sysmalloc (40 samples, 0.01%)</title><rect x="27.0085%" y="245" width="0.0101%" height="15" fill="rgb(222,171,42)" fg:x="106817" fg:w="40"/><text x="27.2585%" y="255.50"></text></g><g><title>_int_malloc (46 samples, 0.01%)</title><rect x="27.0075%" y="261" width="0.0116%" height="15" fill="rgb(243,84,45)" fg:x="106813" fg:w="46"/><text x="27.2575%" y="271.50"></text></g><g><title>operator new (635 samples, 0.16%)</title><rect x="26.9546%" y="293" width="0.1606%" height="15" fill="rgb(252,49,23)" fg:x="106604" fg:w="635"/><text x="27.2046%" y="303.50"></text></g><g><title>__GI___libc_malloc (600 samples, 0.15%)</title><rect x="26.9635%" y="277" width="0.1517%" height="15" fill="rgb(215,19,7)" fg:x="106639" fg:w="600"/><text x="27.2135%" y="287.50"></text></g><g><title>tcache_get (357 samples, 0.09%)</title><rect x="27.0249%" y="261" width="0.0903%" height="15" fill="rgb(238,81,41)" fg:x="106882" fg:w="357"/><text x="27.2749%" y="271.50"></text></g><g><title>rocksdb::Block::IndexType (115 samples, 0.03%)</title><rect x="27.1686%" y="277" width="0.0291%" height="15" fill="rgb(210,199,37)" fg:x="107450" fg:w="115"/><text x="27.4186%" y="287.50"></text></g><g><title>rocksdb::BlockCreateContext::Create (1,156 samples, 0.29%)</title><rect x="26.9332%" y="309" width="0.2923%" height="15" fill="rgb(244,192,49)" fg:x="106519" fg:w="1156"/><text x="27.1832%" y="319.50"></text></g><g><title>rocksdb::Block::Block (424 samples, 0.11%)</title><rect x="27.1182%" y="293" width="0.1072%" height="15" fill="rgb(226,211,11)" fg:x="107251" fg:w="424"/><text x="27.3682%" y="303.50"></text></g><g><title>rocksdb::Block::NumRestarts (110 samples, 0.03%)</title><rect x="27.1976%" y="277" width="0.0278%" height="15" fill="rgb(236,162,54)" fg:x="107565" fg:w="110"/><text x="27.4476%" y="287.50"></text></g><g><title>rocksdb::Hash64 (174 samples, 0.04%)</title><rect x="27.2874%" y="293" width="0.0440%" height="15" fill="rgb(220,229,9)" fg:x="107920" fg:w="174"/><text x="27.5374%" y="303.50"></text></g><g><title>[rocksdb-application] (44 samples, 0.01%)</title><rect x="27.4543%" y="261" width="0.0111%" height="15" fill="rgb(250,87,22)" fg:x="108580" fg:w="44"/><text x="27.7043%" y="271.50"></text></g><g><title>__GI___libc_malloc (325 samples, 0.08%)</title><rect x="27.4654%" y="261" width="0.0822%" height="15" fill="rgb(239,43,17)" fg:x="108624" fg:w="325"/><text x="27.7154%" y="271.50"></text></g><g><title>tcache_get (159 samples, 0.04%)</title><rect x="27.5074%" y="245" width="0.0402%" height="15" fill="rgb(231,177,25)" fg:x="108790" fg:w="159"/><text x="27.7574%" y="255.50"></text></g><g><title>__memcpy_evex_unaligned_erms (49 samples, 0.01%)</title><rect x="27.5476%" y="261" width="0.0124%" height="15" fill="rgb(219,179,1)" fg:x="108949" fg:w="49"/><text x="27.7976%" y="271.50"></text></g><g><title>rocksdb::lru_cache::LRUCacheShard::CreateHandle (704 samples, 0.18%)</title><rect x="27.3822%" y="277" width="0.1780%" height="15" fill="rgb(238,219,53)" fg:x="108295" fg:w="704"/><text x="27.6322%" y="287.50"></text></g><g><title>handle_pte_fault (44 samples, 0.01%)</title><rect x="28.6252%" y="149" width="0.0111%" height="15" fill="rgb(232,167,36)" fg:x="113211" fg:w="44"/><text x="28.8752%" y="159.50"></text></g><g><title>__handle_mm_fault (50 samples, 0.01%)</title><rect x="28.6242%" y="165" width="0.0126%" height="15" fill="rgb(244,19,51)" fg:x="113207" fg:w="50"/><text x="28.8742%" y="175.50"></text></g><g><title>do_user_addr_fault (64 samples, 0.02%)</title><rect x="28.6212%" y="197" width="0.0162%" height="15" fill="rgb(224,6,22)" fg:x="113195" fg:w="64"/><text x="28.8712%" y="207.50"></text></g><g><title>handle_mm_fault (54 samples, 0.01%)</title><rect x="28.6237%" y="181" width="0.0137%" height="15" fill="rgb(224,145,5)" fg:x="113205" fg:w="54"/><text x="28.8737%" y="191.50"></text></g><g><title>asm_exc_page_fault (98 samples, 0.02%)</title><rect x="28.6204%" y="229" width="0.0248%" height="15" fill="rgb(234,130,49)" fg:x="113192" fg:w="98"/><text x="28.8704%" y="239.50"></text></g><g><title>exc_page_fault (97 samples, 0.02%)</title><rect x="28.6207%" y="213" width="0.0245%" height="15" fill="rgb(254,6,2)" fg:x="113193" fg:w="97"/><text x="28.8707%" y="223.50"></text></g><g><title>rocksdb::lru_cache::LRUCacheShard::LRU_Remove (3,812 samples, 0.96%)</title><rect x="27.6861%" y="245" width="0.9639%" height="15" fill="rgb(208,96,46)" fg:x="109497" fg:w="3812"/><text x="27.9361%" y="255.50"></text></g><g><title>__memcmp_evex_movbe (523 samples, 0.13%)</title><rect x="29.1772%" y="213" width="0.1322%" height="15" fill="rgb(239,3,39)" fg:x="115394" fg:w="523"/><text x="29.4272%" y="223.50"></text></g><g><title>rocksdb::lru_cache::LRUCacheShard::EvictFromLRU (6,660 samples, 1.68%)</title><rect x="27.6323%" y="261" width="1.6840%" height="15" fill="rgb(233,210,1)" fg:x="109284" fg:w="6660"/><text x="27.8823%" y="271.50"></text></g><g><title>rocksdb::lru_cache::LRUHandleTable::Remove (2,635 samples, 0.67%)</title><rect x="28.6500%" y="245" width="0.6663%" height="15" fill="rgb(244,137,37)" fg:x="113309" fg:w="2635"/><text x="28.9000%" y="255.50"></text></g><g><title>rocksdb::lru_cache::LRUHandleTable::FindPointer (2,594 samples, 0.66%)</title><rect x="28.6604%" y="229" width="0.6559%" height="15" fill="rgb(240,136,2)" fg:x="113350" fg:w="2594"/><text x="28.9104%" y="239.50"></text></g><g><title>_int_free (343 samples, 0.09%)</title><rect x="29.5479%" y="229" width="0.0867%" height="15" fill="rgb(239,18,37)" fg:x="116860" fg:w="343"/><text x="29.7979%" y="239.50"></text></g><g><title>tcache_put (67 samples, 0.02%)</title><rect x="29.6176%" y="213" width="0.0169%" height="15" fill="rgb(218,185,22)" fg:x="117136" fg:w="67"/><text x="29.8676%" y="223.50"></text></g><g><title>arena_for_chunk (118 samples, 0.03%)</title><rect x="29.6346%" y="229" width="0.0298%" height="15" fill="rgb(225,218,4)" fg:x="117203" fg:w="118"/><text x="29.8846%" y="239.50"></text></g><g><title>arena_for_chunk (83 samples, 0.02%)</title><rect x="29.6434%" y="213" width="0.0210%" height="15" fill="rgb(230,182,32)" fg:x="117238" fg:w="83"/><text x="29.8934%" y="223.50"></text></g><g><title>__GI___libc_free (686 samples, 0.17%)</title><rect x="29.4912%" y="245" width="0.1735%" height="15" fill="rgb(242,56,43)" fg:x="116636" fg:w="686"/><text x="29.7412%" y="255.50"></text></g><g><title>do_user_addr_fault (65 samples, 0.02%)</title><rect x="32.1390%" y="165" width="0.0164%" height="15" fill="rgb(233,99,24)" fg:x="127108" fg:w="65"/><text x="32.3890%" y="175.50"></text></g><g><title>handle_mm_fault (51 samples, 0.01%)</title><rect x="32.1426%" y="149" width="0.0129%" height="15" fill="rgb(234,209,42)" fg:x="127122" fg:w="51"/><text x="32.3926%" y="159.50"></text></g><g><title>__handle_mm_fault (48 samples, 0.01%)</title><rect x="32.1433%" y="133" width="0.0121%" height="15" fill="rgb(227,7,12)" fg:x="127125" fg:w="48"/><text x="32.3933%" y="143.50"></text></g><g><title>exc_page_fault (94 samples, 0.02%)</title><rect x="32.1390%" y="181" width="0.0238%" height="15" fill="rgb(245,203,43)" fg:x="127108" fg:w="94"/><text x="32.3890%" y="191.50"></text></g><g><title>asm_exc_page_fault (97 samples, 0.02%)</title><rect x="32.1388%" y="197" width="0.0245%" height="15" fill="rgb(238,205,33)" fg:x="127107" fg:w="97"/><text x="32.3888%" y="207.50"></text></g><g><title>_int_free (6,832 samples, 1.73%)</title><rect x="30.4548%" y="213" width="1.7275%" height="15" fill="rgb(231,56,7)" fg:x="120447" fg:w="6832"/><text x="30.7048%" y="223.50"></text></g><g><title>unlink_chunk (55 samples, 0.01%)</title><rect x="32.1684%" y="197" width="0.0139%" height="15" fill="rgb(244,186,29)" fg:x="127224" fg:w="55"/><text x="32.4184%" y="207.50"></text></g><g><title>arena_for_chunk (52 samples, 0.01%)</title><rect x="32.1823%" y="213" width="0.0131%" height="15" fill="rgb(234,111,31)" fg:x="127279" fg:w="52"/><text x="32.4323%" y="223.50"></text></g><g><title>handle_pte_fault (50 samples, 0.01%)</title><rect x="32.2038%" y="133" width="0.0126%" height="15" fill="rgb(241,149,10)" fg:x="127364" fg:w="50"/><text x="32.4538%" y="143.50"></text></g><g><title>do_user_addr_fault (83 samples, 0.02%)</title><rect x="32.1957%" y="181" width="0.0210%" height="15" fill="rgb(249,206,44)" fg:x="127332" fg:w="83"/><text x="32.4457%" y="191.50"></text></g><g><title>handle_mm_fault (67 samples, 0.02%)</title><rect x="32.1997%" y="165" width="0.0169%" height="15" fill="rgb(251,153,30)" fg:x="127348" fg:w="67"/><text x="32.4497%" y="175.50"></text></g><g><title>__handle_mm_fault (62 samples, 0.02%)</title><rect x="32.2010%" y="149" width="0.0157%" height="15" fill="rgb(239,152,38)" fg:x="127353" fg:w="62"/><text x="32.4510%" y="159.50"></text></g><g><title>exc_page_fault (111 samples, 0.03%)</title><rect x="32.1954%" y="197" width="0.0281%" height="15" fill="rgb(249,139,47)" fg:x="127331" fg:w="111"/><text x="32.4454%" y="207.50"></text></g><g><title>asm_exc_page_fault (113 samples, 0.03%)</title><rect x="32.1954%" y="213" width="0.0286%" height="15" fill="rgb(244,64,35)" fg:x="127331" fg:w="113"/><text x="32.4454%" y="223.50"></text></g><g><title>__GI___libc_free (10,053 samples, 2.54%)</title><rect x="29.6884%" y="229" width="2.5419%" height="15" fill="rgb(216,46,15)" fg:x="117416" fg:w="10053"/><text x="29.9384%" y="239.50">__..</text></g><g><title>rocksdb::BasicTypedCacheHelperFns&lt;rocksdb::Block_kData&gt;::Delete (12,493 samples, 3.16%)</title><rect x="29.6740%" y="245" width="3.1588%" height="15" fill="rgb(250,74,19)" fg:x="117359" fg:w="12493"/><text x="29.9240%" y="255.50">roc..</text></g><g><title>rocksdb::Block::~Block (2,329 samples, 0.59%)</title><rect x="32.2440%" y="229" width="0.5889%" height="15" fill="rgb(249,42,33)" fg:x="127523" fg:w="2329"/><text x="32.4940%" y="239.50"></text></g><g><title>rocksdb::lru_cache::LRUCacheShard::NotifyEvicted (13,913 samples, 3.52%)</title><rect x="29.3162%" y="261" width="3.5179%" height="15" fill="rgb(242,149,17)" fg:x="115944" fg:w="13913"/><text x="29.5662%" y="271.50">roc..</text></g><g><title>rocksdb::lru_cache::LRUHandleTable::FindPointer (137 samples, 0.03%)</title><rect x="32.8685%" y="245" width="0.0346%" height="15" fill="rgb(244,29,21)" fg:x="129993" fg:w="137"/><text x="33.1185%" y="255.50"></text></g><g><title>rocksdb::lru_cache::LRUHandleTable::Insert (290 samples, 0.07%)</title><rect x="32.8341%" y="261" width="0.0733%" height="15" fill="rgb(220,130,37)" fg:x="129857" fg:w="290"/><text x="33.0841%" y="271.50"></text></g><g><title>rocksdb::port::Mutex::Lock (970 samples, 0.25%)</title><rect x="32.9075%" y="261" width="0.2453%" height="15" fill="rgb(211,67,2)" fg:x="130147" fg:w="970"/><text x="33.1575%" y="271.50"></text></g><g><title>___pthread_mutex_lock (902 samples, 0.23%)</title><rect x="32.9246%" y="245" width="0.2281%" height="15" fill="rgb(235,68,52)" fg:x="130215" fg:w="902"/><text x="33.1746%" y="255.50"></text></g><g><title>lll_mutex_lock_optimized (850 samples, 0.21%)</title><rect x="32.9378%" y="229" width="0.2149%" height="15" fill="rgb(246,142,3)" fg:x="130267" fg:w="850"/><text x="33.1878%" y="239.50"></text></g><g><title>rocksdb::ShardedCache&lt;rocksdb::lru_cache::LRUCacheShard&gt;::Insert (25,296 samples, 6.40%)</title><rect x="27.2254%" y="309" width="6.3961%" height="15" fill="rgb(241,25,7)" fg:x="107675" fg:w="25296"/><text x="27.4754%" y="319.50">rocksdb:..</text></g><g><title>rocksdb::lru_cache::LRUCacheShard::Insert (24,877 samples, 6.29%)</title><rect x="27.3314%" y="293" width="6.2901%" height="15" fill="rgb(242,119,39)" fg:x="108094" fg:w="24877"/><text x="27.5814%" y="303.50">rocksdb:..</text></g><g><title>rocksdb::lru_cache::LRUCacheShard::InsertItem (23,972 samples, 6.06%)</title><rect x="27.5602%" y="277" width="6.0613%" height="15" fill="rgb(241,98,45)" fg:x="108999" fg:w="23972"/><text x="27.8102%" y="287.50">rocksdb:..</text></g><g><title>rocksdb::port::Mutex::Unlock (1,854 samples, 0.47%)</title><rect x="33.1527%" y="261" width="0.4688%" height="15" fill="rgb(254,28,30)" fg:x="131117" fg:w="1854"/><text x="33.4027%" y="271.50"></text></g><g><title>___pthread_mutex_unlock (1,796 samples, 0.45%)</title><rect x="33.1674%" y="245" width="0.4541%" height="15" fill="rgb(241,142,54)" fg:x="131175" fg:w="1796"/><text x="33.4174%" y="255.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (1,790 samples, 0.45%)</title><rect x="33.1689%" y="229" width="0.4526%" height="15" fill="rgb(222,85,15)" fg:x="131181" fg:w="1790"/><text x="33.4189%" y="239.50"></text></g><g><title>lll_mutex_unlock_optimized (1,738 samples, 0.44%)</title><rect x="33.1820%" y="213" width="0.4395%" height="15" fill="rgb(210,85,47)" fg:x="131233" fg:w="1738"/><text x="33.4320%" y="223.50"></text></g><g><title>rocksdb::BlockBasedTable::PutDataBlockToCache&lt;rocksdb::Block_kData&gt; (27,594 samples, 6.98%)</title><rect x="26.6712%" y="325" width="6.9771%" height="15" fill="rgb(224,206,25)" fg:x="105483" fg:w="27594"/><text x="26.9212%" y="335.50">rocksdb::..</text></g><g><title>rocksdb::Status::operator= (106 samples, 0.03%)</title><rect x="33.6215%" y="309" width="0.0268%" height="15" fill="rgb(243,201,19)" fg:x="132971" fg:w="106"/><text x="33.8715%" y="319.50"></text></g><g><title>__tls_init (129 samples, 0.03%)</title><rect x="34.5338%" y="309" width="0.0326%" height="15" fill="rgb(236,59,4)" fg:x="136579" fg:w="129"/><text x="34.7838%" y="319.50"></text></g><g><title>rocksdb::BlockFetcher::TryGetSerializedBlockFromPersistentCache (95 samples, 0.02%)</title><rect x="34.5679%" y="309" width="0.0240%" height="15" fill="rgb(254,179,45)" fg:x="136714" fg:w="95"/><text x="34.8179%" y="319.50"></text></g><g><title>rocksdb::RandomAccessFileReader::PrepareIOOptions (265 samples, 0.07%)</title><rect x="34.5940%" y="309" width="0.0670%" height="15" fill="rgb(226,14,10)" fg:x="136817" fg:w="265"/><text x="34.8440%" y="319.50"></text></g><g><title>__tls_init (65 samples, 0.02%)</title><rect x="35.0402%" y="293" width="0.0164%" height="15" fill="rgb(244,27,41)" fg:x="138582" fg:w="65"/><text x="35.2902%" y="303.50"></text></g><g><title>__GI___pthread_disable_asynccancel (125 samples, 0.03%)</title><rect x="35.4933%" y="245" width="0.0316%" height="15" fill="rgb(235,35,32)" fg:x="140374" fg:w="125"/><text x="35.7433%" y="255.50"></text></g><g><title>__GI___pthread_enable_asynccancel (150 samples, 0.04%)</title><rect x="35.5249%" y="245" width="0.0379%" height="15" fill="rgb(218,68,31)" fg:x="140499" fg:w="150"/><text x="35.7749%" y="255.50"></text></g><g><title>do_syscall_64 (206 samples, 0.05%)</title><rect x="35.5722%" y="245" width="0.0521%" height="15" fill="rgb(207,120,37)" fg:x="140686" fg:w="206"/><text x="35.8222%" y="255.50"></text></g><g><title>entry_SYSCALL_64 (4,022 samples, 1.02%)</title><rect x="35.6243%" y="245" width="1.0170%" height="15" fill="rgb(227,98,0)" fg:x="140892" fg:w="4022"/><text x="35.8743%" y="255.50"></text></g><g><title>__x64_sys_pread64 (404 samples, 0.10%)</title><rect x="37.9214%" y="229" width="0.1022%" height="15" fill="rgb(207,7,3)" fg:x="149977" fg:w="404"/><text x="38.1714%" y="239.50"></text></g><g><title>__fget_files (1,451 samples, 0.37%)</title><rect x="38.3445%" y="165" width="0.3669%" height="15" fill="rgb(206,98,19)" fg:x="151650" fg:w="1451"/><text x="38.5945%" y="175.50"></text></g><g><title>__fdget (1,493 samples, 0.38%)</title><rect x="38.3366%" y="197" width="0.3775%" height="15" fill="rgb(217,5,26)" fg:x="151619" fg:w="1493"/><text x="38.5866%" y="207.50"></text></g><g><title>__fget_light (1,477 samples, 0.37%)</title><rect x="38.3407%" y="181" width="0.3735%" height="15" fill="rgb(235,190,38)" fg:x="151635" fg:w="1477"/><text x="38.5907%" y="191.50"></text></g><g><title>__fget_light (487 samples, 0.12%)</title><rect x="38.7141%" y="197" width="0.1231%" height="15" fill="rgb(247,86,24)" fg:x="153112" fg:w="487"/><text x="38.9641%" y="207.50"></text></g><g><title>fput_many (318 samples, 0.08%)</title><rect x="38.8431%" y="197" width="0.0804%" height="15" fill="rgb(205,101,16)" fg:x="153622" fg:w="318"/><text x="39.0931%" y="207.50"></text></g><g><title>rw_verify_area (79 samples, 0.02%)</title><rect x="38.9288%" y="197" width="0.0200%" height="15" fill="rgb(246,168,33)" fg:x="153961" fg:w="79"/><text x="39.1788%" y="207.50"></text></g><g><title>ext4_file_read_iter (73 samples, 0.02%)</title><rect x="39.1268%" y="181" width="0.0185%" height="15" fill="rgb(231,114,1)" fg:x="154744" fg:w="73"/><text x="39.3768%" y="191.50"></text></g><g><title>iov_iter_init (42 samples, 0.01%)</title><rect x="39.1452%" y="181" width="0.0106%" height="15" fill="rgb(207,184,53)" fg:x="154817" fg:w="42"/><text x="39.3952%" y="191.50"></text></g><g><title>__cond_resched (81 samples, 0.02%)</title><rect x="39.9708%" y="117" width="0.0205%" height="15" fill="rgb(224,95,51)" fg:x="158082" fg:w="81"/><text x="40.2208%" y="127.50"></text></g><g><title>__cond_resched (47 samples, 0.01%)</title><rect x="40.2006%" y="101" width="0.0119%" height="15" fill="rgb(212,188,45)" fg:x="158991" fg:w="47"/><text x="40.4506%" y="111.50"></text></g><g><title>copy_page_to_iter (894 samples, 0.23%)</title><rect x="39.9963%" y="117" width="0.2260%" height="15" fill="rgb(223,154,38)" fg:x="158183" fg:w="894"/><text x="40.2463%" y="127.50"></text></g><g><title>copy_user_enhanced_fast_string (13,361 samples, 3.38%)</title><rect x="40.2224%" y="117" width="3.3783%" height="15" fill="rgb(251,22,52)" fg:x="159077" fg:w="13361"/><text x="40.4724%" y="127.50">cop..</text></g><g><title>copy_user_generic_unrolled (300 samples, 0.08%)</title><rect x="43.6007%" y="117" width="0.0759%" height="15" fill="rgb(229,209,22)" fg:x="172438" fg:w="300"/><text x="43.8507%" y="127.50"></text></g><g><title>xas_load (2,670 samples, 0.68%)</title><rect x="45.7840%" y="85" width="0.6751%" height="15" fill="rgb(234,138,34)" fg:x="181073" fg:w="2670"/><text x="46.0340%" y="95.50"></text></g><g><title>xas_start (374 samples, 0.09%)</title><rect x="46.3645%" y="69" width="0.0946%" height="15" fill="rgb(212,95,11)" fg:x="183369" fg:w="374"/><text x="46.6145%" y="79.50"></text></g><g><title>filemap_get_read_batch (10,704 samples, 2.71%)</title><rect x="43.7559%" y="101" width="2.7065%" height="15" fill="rgb(240,179,47)" fg:x="173052" fg:w="10704"/><text x="44.0059%" y="111.50">fi..</text></g><g><title>filemap_get_pages (11,048 samples, 2.79%)</title><rect x="43.6765%" y="117" width="2.7935%" height="15" fill="rgb(240,163,11)" fg:x="172738" fg:w="11048"/><text x="43.9265%" y="127.50">fi..</text></g><g><title>mark_page_accessed (150 samples, 0.04%)</title><rect x="46.4791%" y="117" width="0.0379%" height="15" fill="rgb(236,37,12)" fg:x="183822" fg:w="150"/><text x="46.7291%" y="127.50"></text></g><g><title>current_time (241 samples, 0.06%)</title><rect x="46.6677%" y="85" width="0.0609%" height="15" fill="rgb(232,164,16)" fg:x="184568" fg:w="241"/><text x="46.9177%" y="95.50"></text></g><g><title>ktime_get_coarse_real_ts64 (84 samples, 0.02%)</title><rect x="46.7074%" y="69" width="0.0212%" height="15" fill="rgb(244,205,15)" fg:x="184725" fg:w="84"/><text x="46.9574%" y="79.50"></text></g><g><title>atime_needs_update (592 samples, 0.15%)</title><rect x="46.5863%" y="101" width="0.1497%" height="15" fill="rgb(223,117,47)" fg:x="184246" fg:w="592"/><text x="46.8363%" y="111.50"></text></g><g><title>filemap_read (28,054 samples, 7.09%)</title><rect x="39.6476%" y="133" width="7.0934%" height="15" fill="rgb(244,107,35)" fg:x="156804" fg:w="28054"/><text x="39.8976%" y="143.50">filemap_re..</text></g><g><title>touch_atime (850 samples, 0.21%)</title><rect x="46.5261%" y="117" width="0.2149%" height="15" fill="rgb(205,140,8)" fg:x="184008" fg:w="850"/><text x="46.7761%" y="127.50"></text></g><g><title>ext4_file_read_iter (29,251 samples, 7.40%)</title><rect x="39.3533%" y="165" width="7.3961%" height="15" fill="rgb(228,84,46)" fg:x="155640" fg:w="29251"/><text x="39.6033%" y="175.50">ext4_file_..</text></g><g><title>generic_file_read_iter (28,393 samples, 7.18%)</title><rect x="39.5703%" y="149" width="7.1791%" height="15" fill="rgb(254,188,9)" fg:x="156498" fg:w="28393"/><text x="39.8203%" y="159.50">generic_fi..</text></g><g><title>new_sync_read (30,045 samples, 7.60%)</title><rect x="39.1558%" y="181" width="7.5968%" height="15" fill="rgb(206,112,54)" fg:x="154859" fg:w="30045"/><text x="39.4058%" y="191.50">new_sync_r..</text></g><g><title>apparmor_file_permission (72 samples, 0.02%)</title><rect x="46.7527%" y="165" width="0.0182%" height="15" fill="rgb(216,84,49)" fg:x="184904" fg:w="72"/><text x="47.0027%" y="175.50"></text></g><g><title>aa_file_perm (103 samples, 0.03%)</title><rect x="47.0505%" y="133" width="0.0260%" height="15" fill="rgb(214,194,35)" fg:x="186082" fg:w="103"/><text x="47.3005%" y="143.50"></text></g><g><title>apparmor_file_permission (1,085 samples, 0.27%)</title><rect x="46.8068%" y="149" width="0.2743%" height="15" fill="rgb(249,28,3)" fg:x="185118" fg:w="1085"/><text x="47.0568%" y="159.50"></text></g><g><title>rw_verify_area (1,843 samples, 0.47%)</title><rect x="46.7527%" y="181" width="0.4660%" height="15" fill="rgb(222,56,52)" fg:x="184904" fg:w="1843"/><text x="47.0027%" y="191.50"></text></g><g><title>security_file_permission (1,745 samples, 0.44%)</title><rect x="46.7774%" y="165" width="0.4412%" height="15" fill="rgb(245,217,50)" fg:x="185002" fg:w="1745"/><text x="47.0274%" y="175.50"></text></g><g><title>fsnotify_perm.part.0 (544 samples, 0.14%)</title><rect x="47.0811%" y="149" width="0.1375%" height="15" fill="rgb(213,201,24)" fg:x="186203" fg:w="544"/><text x="47.3311%" y="159.50"></text></g><g><title>__x64_sys_pread64 (35,498 samples, 8.98%)</title><rect x="38.2474%" y="213" width="8.9756%" height="15" fill="rgb(248,116,28)" fg:x="151266" fg:w="35498"/><text x="38.4974%" y="223.50">__x64_sys_pre..</text></g><g><title>vfs_read (32,724 samples, 8.27%)</title><rect x="38.9488%" y="197" width="8.2742%" height="15" fill="rgb(219,72,43)" fg:x="154040" fg:w="32724"/><text x="39.1988%" y="207.50">vfs_read</text></g><g><title>amd_clear_divider (124 samples, 0.03%)</title><rect x="47.2230%" y="213" width="0.0314%" height="15" fill="rgb(209,138,14)" fg:x="186764" fg:w="124"/><text x="47.4730%" y="223.50"></text></g><g><title>exit_to_user_mode_prepare (220 samples, 0.06%)</title><rect x="47.2543%" y="213" width="0.0556%" height="15" fill="rgb(222,18,33)" fg:x="186888" fg:w="220"/><text x="47.5043%" y="223.50"></text></g><g><title>memcpy_erms (391 samples, 0.10%)</title><rect x="47.6040%" y="181" width="0.0989%" height="15" fill="rgb(213,199,7)" fg:x="188271" fg:w="391"/><text x="47.8540%" y="191.50"></text></g><g><title>perf_swevent_put_recursion_context (224 samples, 0.06%)</title><rect x="47.7029%" y="181" width="0.0566%" height="15" fill="rgb(250,110,10)" fg:x="188662" fg:w="224"/><text x="47.9529%" y="191.50"></text></g><g><title>[unknown] (377 samples, 0.10%)</title><rect x="48.1294%" y="149" width="0.0953%" height="15" fill="rgb(248,123,6)" fg:x="190349" fg:w="377"/><text x="48.3794%" y="159.50"></text></g><g><title>migrate_disable (57 samples, 0.01%)</title><rect x="48.2253%" y="149" width="0.0144%" height="15" fill="rgb(206,91,31)" fg:x="190728" fg:w="57"/><text x="48.4753%" y="159.50"></text></g><g><title>ktime_get_mono_fast_ns (749 samples, 0.19%)</title><rect x="48.9545%" y="101" width="0.1894%" height="15" fill="rgb(211,154,13)" fg:x="193612" fg:w="749"/><text x="49.2045%" y="111.50"></text></g><g><title>bpf_ktime_get_ns (1,639 samples, 0.41%)</title><rect x="48.9514%" y="117" width="0.4144%" height="15" fill="rgb(225,148,7)" fg:x="193600" fg:w="1639"/><text x="49.2014%" y="127.50"></text></g><g><title>read_tsc (878 samples, 0.22%)</title><rect x="49.1439%" y="101" width="0.2220%" height="15" fill="rgb(220,160,43)" fg:x="194361" fg:w="878"/><text x="49.3939%" y="111.50"></text></g><g><title>lookup_nulls_elem_raw (917 samples, 0.23%)</title><rect x="49.4450%" y="101" width="0.2319%" height="15" fill="rgb(213,52,39)" fg:x="195552" fg:w="917"/><text x="49.6950%" y="111.50"></text></g><g><title>htab_percpu_map_lookup_elem (1,298 samples, 0.33%)</title><rect x="49.3659%" y="117" width="0.3282%" height="15" fill="rgb(243,137,7)" fg:x="195239" fg:w="1298"/><text x="49.6159%" y="127.50"></text></g><g><title>memcmp (68 samples, 0.02%)</title><rect x="49.6769%" y="101" width="0.0172%" height="15" fill="rgb(230,79,13)" fg:x="196469" fg:w="68"/><text x="49.9269%" y="111.50"></text></g><g><title>jhash (389 samples, 0.10%)</title><rect x="49.6941%" y="117" width="0.0984%" height="15" fill="rgb(247,105,23)" fg:x="196537" fg:w="389"/><text x="49.9441%" y="127.50"></text></g><g><title>[unknown] (4,256 samples, 1.08%)</title><rect x="48.7423%" y="133" width="1.0761%" height="15" fill="rgb(223,179,41)" fg:x="192773" fg:w="4256"/><text x="48.9923%" y="143.50"></text></g><g><title>lookup_nulls_elem_raw (82 samples, 0.02%)</title><rect x="49.7977%" y="117" width="0.0207%" height="15" fill="rgb(218,9,34)" fg:x="196947" fg:w="82"/><text x="50.0477%" y="127.50"></text></g><g><title>migrate_disable (101 samples, 0.03%)</title><rect x="49.8293%" y="133" width="0.0255%" height="15" fill="rgb(222,106,8)" fg:x="197072" fg:w="101"/><text x="50.0793%" y="143.50"></text></g><g><title>migrate_enable (221 samples, 0.06%)</title><rect x="49.8549%" y="133" width="0.0559%" height="15" fill="rgb(211,220,0)" fg:x="197173" fg:w="221"/><text x="50.1049%" y="143.50"></text></g><g><title>perf_call_bpf_enter.isra.0 (8,048 samples, 2.03%)</title><rect x="48.0422%" y="165" width="2.0349%" height="15" fill="rgb(229,52,16)" fg:x="190004" fg:w="8048"/><text x="48.2922%" y="175.50">p..</text></g><g><title>trace_call_bpf (7,215 samples, 1.82%)</title><rect x="48.2528%" y="149" width="1.8243%" height="15" fill="rgb(212,155,18)" fg:x="190837" fg:w="7215"/><text x="48.5028%" y="159.50">t..</text></g><g><title>sched_clock (633 samples, 0.16%)</title><rect x="49.9171%" y="133" width="0.1601%" height="15" fill="rgb(242,21,14)" fg:x="197419" fg:w="633"/><text x="50.1671%" y="143.50"></text></g><g><title>native_sched_clock (617 samples, 0.16%)</title><rect x="49.9211%" y="117" width="0.1560%" height="15" fill="rgb(222,19,48)" fg:x="197435" fg:w="617"/><text x="50.1711%" y="127.50"></text></g><g><title>perf_swevent_get_recursion_context (122 samples, 0.03%)</title><rect x="50.0771%" y="165" width="0.0308%" height="15" fill="rgb(232,45,27)" fg:x="198052" fg:w="122"/><text x="50.3271%" y="175.50"></text></g><g><title>perf_trace_buf_alloc (193 samples, 0.05%)</title><rect x="50.1080%" y="165" width="0.0488%" height="15" fill="rgb(249,103,42)" fg:x="198174" fg:w="193"/><text x="50.3580%" y="175.50"></text></g><g><title>perf_syscall_enter (9,482 samples, 2.40%)</title><rect x="47.7595%" y="181" width="2.3975%" height="15" fill="rgb(246,81,33)" fg:x="188886" fg:w="9482"/><text x="48.0095%" y="191.50">pe..</text></g><g><title>syscall_enter_from_user_mode (11,229 samples, 2.84%)</title><rect x="47.3190%" y="213" width="2.8392%" height="15" fill="rgb(252,33,42)" fg:x="187144" fg:w="11229"/><text x="47.5690%" y="223.50">sy..</text></g><g><title>syscall_trace_enter.constprop.0 (10,958 samples, 2.77%)</title><rect x="47.3876%" y="197" width="2.7707%" height="15" fill="rgb(209,212,41)" fg:x="187415" fg:w="10958"/><text x="47.6376%" y="207.50">sy..</text></g><g><title>exit_to_user_mode_loop (47 samples, 0.01%)</title><rect x="52.4787%" y="181" width="0.0119%" height="15" fill="rgb(207,154,6)" fg:x="207550" fg:w="47"/><text x="52.7287%" y="191.50"></text></g><g><title>exit_to_user_mode_prepare (814 samples, 0.21%)</title><rect x="52.3591%" y="197" width="0.2058%" height="15" fill="rgb(223,64,47)" fg:x="207077" fg:w="814"/><text x="52.6091%" y="207.50"></text></g><g><title>fpregs_assert_state_consistent (294 samples, 0.07%)</title><rect x="52.4906%" y="181" width="0.0743%" height="15" fill="rgb(211,161,38)" fg:x="207597" fg:w="294"/><text x="52.7406%" y="191.50"></text></g><g><title>fpregs_assert_state_consistent (83 samples, 0.02%)</title><rect x="52.5649%" y="197" width="0.0210%" height="15" fill="rgb(219,138,40)" fg:x="207891" fg:w="83"/><text x="52.8149%" y="207.50"></text></g><g><title>syscall_exit_to_user_mode (9,782 samples, 2.47%)</title><rect x="50.1583%" y="213" width="2.4734%" height="15" fill="rgb(241,228,46)" fg:x="198373" fg:w="9782"/><text x="50.4083%" y="223.50">sy..</text></g><g><title>syscall_exit_work (181 samples, 0.05%)</title><rect x="52.5859%" y="197" width="0.0458%" height="15" fill="rgb(223,209,38)" fg:x="207974" fg:w="181"/><text x="52.8359%" y="207.50"></text></g><g><title>do_syscall_64 (57,835 samples, 14.62%)</title><rect x="38.0236%" y="229" width="14.6235%" height="15" fill="rgb(236,164,45)" fg:x="150381" fg:w="57835"/><text x="38.2736%" y="239.50">do_syscall_64</text></g><g><title>syscall_enter_from_user_mode (72 samples, 0.02%)</title><rect x="52.6471%" y="229" width="0.0182%" height="15" fill="rgb(231,15,5)" fg:x="208216" fg:w="72"/><text x="52.8971%" y="239.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (63,431 samples, 16.04%)</title><rect x="36.6413%" y="245" width="16.0384%" height="15" fill="rgb(252,35,15)" fg:x="144914" fg:w="63431"/><text x="36.8913%" y="255.50">entry_SYSCALL_64_after_hw..</text></g><g><title>syscall_exit_to_user_mode (57 samples, 0.01%)</title><rect x="52.6653%" y="229" width="0.0144%" height="15" fill="rgb(248,181,18)" fg:x="208288" fg:w="57"/><text x="52.9153%" y="239.50"></text></g><g><title>__libc_pread64 (78,156 samples, 19.76%)</title><rect x="35.3065%" y="261" width="19.7616%" height="15" fill="rgb(233,39,42)" fg:x="139635" fg:w="78156"/><text x="35.5565%" y="271.50">__libc_pread64</text></g><g><title>syscall_return_via_sysret (9,446 samples, 2.39%)</title><rect x="52.6797%" y="245" width="2.3884%" height="15" fill="rgb(238,110,33)" fg:x="208345" fg:w="9446"/><text x="52.9297%" y="255.50">sy..</text></g><g><title>__libc_pread64 (78,522 samples, 19.85%)</title><rect x="35.2142%" y="277" width="19.8542%" height="15" fill="rgb(233,195,10)" fg:x="139270" fg:w="78522"/><text x="35.4642%" y="287.50">__libc_pread64</text></g><g><title>rocksdb::PosixRandomAccessFile::Read (79,161 samples, 20.02%)</title><rect x="35.0627%" y="293" width="20.0157%" height="15" fill="rgb(254,105,3)" fg:x="138671" fg:w="79161"/><text x="35.3127%" y="303.50">rocksdb::PosixRandomAccessFile:..</text></g><g><title>rocksdb::RandomAccessFileReader::Read (81,024 samples, 20.49%)</title><rect x="34.6610%" y="309" width="20.4868%" height="15" fill="rgb(221,225,9)" fg:x="137082" fg:w="81024"/><text x="34.9110%" y="319.50">rocksdb::RandomAccessFileReader:..</text></g><g><title>rocksdb::StopWatch::~StopWatch (259 samples, 0.07%)</title><rect x="55.0823%" y="293" width="0.0655%" height="15" fill="rgb(224,227,45)" fg:x="217847" fg:w="259"/><text x="55.3323%" y="303.50"></text></g><g><title>[libstdc++.so.6.0.30] (157 samples, 0.04%)</title><rect x="55.4476%" y="277" width="0.0397%" height="15" fill="rgb(229,198,43)" fg:x="219292" fg:w="157"/><text x="55.6976%" y="287.50"></text></g><g><title>__schedule (80 samples, 0.02%)</title><rect x="56.5293%" y="101" width="0.0202%" height="15" fill="rgb(206,209,35)" fg:x="223570" fg:w="80"/><text x="56.7793%" y="111.50"></text></g><g><title>down_read (121 samples, 0.03%)</title><rect x="56.5192%" y="165" width="0.0306%" height="15" fill="rgb(245,195,53)" fg:x="223530" fg:w="121"/><text x="56.7692%" y="175.50"></text></g><g><title>rwsem_down_read_slowpath (120 samples, 0.03%)</title><rect x="56.5194%" y="149" width="0.0303%" height="15" fill="rgb(240,92,26)" fg:x="223531" fg:w="120"/><text x="56.7694%" y="159.50"></text></g><g><title>schedule_preempt_disabled (81 samples, 0.02%)</title><rect x="56.5293%" y="133" width="0.0205%" height="15" fill="rgb(207,40,23)" fg:x="223570" fg:w="81"/><text x="56.7793%" y="143.50"></text></g><g><title>schedule (81 samples, 0.02%)</title><rect x="56.5293%" y="117" width="0.0205%" height="15" fill="rgb(223,111,35)" fg:x="223570" fg:w="81"/><text x="56.7793%" y="127.50"></text></g><g><title>charge_memcg (54 samples, 0.01%)</title><rect x="56.5637%" y="85" width="0.0137%" height="15" fill="rgb(229,147,28)" fg:x="223706" fg:w="54"/><text x="56.8137%" y="95.50"></text></g><g><title>__mem_cgroup_charge (86 samples, 0.02%)</title><rect x="56.5627%" y="101" width="0.0217%" height="15" fill="rgb(211,29,28)" fg:x="223702" fg:w="86"/><text x="56.8127%" y="111.50"></text></g><g><title>__alloc_pages (41 samples, 0.01%)</title><rect x="56.5849%" y="85" width="0.0104%" height="15" fill="rgb(228,72,33)" fg:x="223790" fg:w="41"/><text x="56.8349%" y="95.50"></text></g><g><title>alloc_pages_vma (46 samples, 0.01%)</title><rect x="56.5847%" y="101" width="0.0116%" height="15" fill="rgb(205,214,31)" fg:x="223789" fg:w="46"/><text x="56.8347%" y="111.50"></text></g><g><title>do_anonymous_page (175 samples, 0.04%)</title><rect x="56.5602%" y="117" width="0.0442%" height="15" fill="rgb(224,111,15)" fg:x="223692" fg:w="175"/><text x="56.8102%" y="127.50"></text></g><g><title>handle_pte_fault (186 samples, 0.05%)</title><rect x="56.5579%" y="133" width="0.0470%" height="15" fill="rgb(253,21,26)" fg:x="223683" fg:w="186"/><text x="56.8079%" y="143.50"></text></g><g><title>__handle_mm_fault (203 samples, 0.05%)</title><rect x="56.5541%" y="149" width="0.0513%" height="15" fill="rgb(245,139,43)" fg:x="223668" fg:w="203"/><text x="56.8041%" y="159.50"></text></g><g><title>handle_mm_fault (215 samples, 0.05%)</title><rect x="56.5521%" y="165" width="0.0544%" height="15" fill="rgb(252,170,7)" fg:x="223660" fg:w="215"/><text x="56.8021%" y="175.50"></text></g><g><title>do_user_addr_fault (364 samples, 0.09%)</title><rect x="56.5189%" y="181" width="0.0920%" height="15" fill="rgb(231,118,14)" fg:x="223529" fg:w="364"/><text x="56.7689%" y="191.50"></text></g><g><title>asm_exc_page_fault (405 samples, 0.10%)</title><rect x="56.5184%" y="213" width="0.1024%" height="15" fill="rgb(238,83,0)" fg:x="223527" fg:w="405"/><text x="56.7684%" y="223.50"></text></g><g><title>exc_page_fault (404 samples, 0.10%)</title><rect x="56.5187%" y="197" width="0.1022%" height="15" fill="rgb(221,39,39)" fg:x="223528" fg:w="404"/><text x="56.7687%" y="207.50"></text></g><g><title>osq_lock (619 samples, 0.16%)</title><rect x="56.6853%" y="69" width="0.1565%" height="15" fill="rgb(222,119,46)" fg:x="224187" fg:w="619"/><text x="56.9353%" y="79.50"></text></g><g><title>rwsem_spin_on_owner (143 samples, 0.04%)</title><rect x="56.8449%" y="69" width="0.0362%" height="15" fill="rgb(222,165,49)" fg:x="224818" fg:w="143"/><text x="57.0949%" y="79.50"></text></g><g><title>rwsem_optimistic_spin (939 samples, 0.24%)</title><rect x="56.6443%" y="85" width="0.2374%" height="15" fill="rgb(219,113,52)" fg:x="224025" fg:w="939"/><text x="56.8943%" y="95.50"></text></g><g><title>__schedule (70 samples, 0.02%)</title><rect x="56.8853%" y="69" width="0.0177%" height="15" fill="rgb(214,7,15)" fg:x="224978" fg:w="70"/><text x="57.1353%" y="79.50"></text></g><g><title>schedule (72 samples, 0.02%)</title><rect x="56.8851%" y="85" width="0.0182%" height="15" fill="rgb(235,32,4)" fg:x="224977" fg:w="72"/><text x="57.1351%" y="95.50"></text></g><g><title>down_write_killable (1,073 samples, 0.27%)</title><rect x="56.6327%" y="117" width="0.2713%" height="15" fill="rgb(238,90,54)" fg:x="223979" fg:w="1073"/><text x="56.8827%" y="127.50"></text></g><g><title>rwsem_down_write_slowpath (1,051 samples, 0.27%)</title><rect x="56.6383%" y="101" width="0.2657%" height="15" fill="rgb(213,208,19)" fg:x="224001" fg:w="1051"/><text x="56.8883%" y="111.50"></text></g><g><title>perf_event_mmap_output (40 samples, 0.01%)</title><rect x="56.9321%" y="37" width="0.0101%" height="15" fill="rgb(233,156,4)" fg:x="225163" fg:w="40"/><text x="57.1821%" y="47.50"></text></g><g><title>perf_iterate_ctx (109 samples, 0.03%)</title><rect x="56.9154%" y="53" width="0.0276%" height="15" fill="rgb(207,194,5)" fg:x="225097" fg:w="109"/><text x="57.1654%" y="63.50"></text></g><g><title>perf_event_mmap_event (116 samples, 0.03%)</title><rect x="56.9141%" y="85" width="0.0293%" height="15" fill="rgb(206,111,30)" fg:x="225092" fg:w="116"/><text x="57.1641%" y="95.50"></text></g><g><title>perf_iterate_sb (113 samples, 0.03%)</title><rect x="56.9149%" y="69" width="0.0286%" height="15" fill="rgb(243,70,54)" fg:x="225095" fg:w="113"/><text x="57.1649%" y="79.50"></text></g><g><title>perf_event_mmap (118 samples, 0.03%)</title><rect x="56.9139%" y="101" width="0.0298%" height="15" fill="rgb(242,28,8)" fg:x="225091" fg:w="118"/><text x="57.1639%" y="111.50"></text></g><g><title>mprotect_fixup (183 samples, 0.05%)</title><rect x="56.9055%" y="117" width="0.0463%" height="15" fill="rgb(219,106,18)" fg:x="225058" fg:w="183"/><text x="57.1555%" y="127.50"></text></g><g><title>up_write (106 samples, 0.03%)</title><rect x="56.9521%" y="117" width="0.0268%" height="15" fill="rgb(244,222,10)" fg:x="225242" fg:w="106"/><text x="57.2021%" y="127.50"></text></g><g><title>rwsem_wake.isra.0 (106 samples, 0.03%)</title><rect x="56.9521%" y="101" width="0.0268%" height="15" fill="rgb(236,179,52)" fg:x="225242" fg:w="106"/><text x="57.2021%" y="111.50"></text></g><g><title>wake_up_q (67 samples, 0.02%)</title><rect x="56.9619%" y="85" width="0.0169%" height="15" fill="rgb(213,23,39)" fg:x="225281" fg:w="67"/><text x="57.2119%" y="95.50"></text></g><g><title>try_to_wake_up (60 samples, 0.02%)</title><rect x="56.9637%" y="69" width="0.0152%" height="15" fill="rgb(238,48,10)" fg:x="225288" fg:w="60"/><text x="57.2137%" y="79.50"></text></g><g><title>do_mprotect_pkey (1,380 samples, 0.35%)</title><rect x="56.6307%" y="133" width="0.3489%" height="15" fill="rgb(251,196,23)" fg:x="223971" fg:w="1380"/><text x="56.8807%" y="143.50"></text></g><g><title>__x64_sys_mprotect (1,393 samples, 0.35%)</title><rect x="56.6307%" y="149" width="0.3522%" height="15" fill="rgb(250,152,24)" fg:x="223971" fg:w="1393"/><text x="56.8807%" y="159.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1,462 samples, 0.37%)</title><rect x="56.6244%" y="181" width="0.3697%" height="15" fill="rgb(209,150,17)" fg:x="223946" fg:w="1462"/><text x="56.8744%" y="191.50"></text></g><g><title>do_syscall_64 (1,439 samples, 0.36%)</title><rect x="56.6302%" y="165" width="0.3638%" height="15" fill="rgb(234,202,34)" fg:x="223969" fg:w="1439"/><text x="56.8802%" y="175.50"></text></g><g><title>syscall_exit_to_user_mode (40 samples, 0.01%)</title><rect x="56.9839%" y="149" width="0.0101%" height="15" fill="rgb(253,148,53)" fg:x="225368" fg:w="40"/><text x="57.2339%" y="159.50"></text></g><g><title>__GI___mprotect (1,528 samples, 0.39%)</title><rect x="56.6218%" y="197" width="0.3864%" height="15" fill="rgb(218,129,16)" fg:x="223936" fg:w="1528"/><text x="56.8718%" y="207.50"></text></g><g><title>grow_heap (1,530 samples, 0.39%)</title><rect x="56.6216%" y="213" width="0.3869%" height="15" fill="rgb(216,85,19)" fg:x="223935" fg:w="1530"/><text x="56.8716%" y="223.50"></text></g><g><title>sysmalloc (2,000 samples, 0.51%)</title><rect x="56.5053%" y="229" width="0.5057%" height="15" fill="rgb(235,228,7)" fg:x="223475" fg:w="2000"/><text x="56.7553%" y="239.50"></text></g><g><title>_int_malloc (4,979 samples, 1.26%)</title><rect x="55.8496%" y="245" width="1.2589%" height="15" fill="rgb(245,175,0)" fg:x="220882" fg:w="4979"/><text x="56.0996%" y="255.50"></text></g><g><title>unlink_chunk (376 samples, 0.10%)</title><rect x="57.0135%" y="229" width="0.0951%" height="15" fill="rgb(208,168,36)" fg:x="225485" fg:w="376"/><text x="57.2635%" y="239.50"></text></g><g><title>operator new (6,464 samples, 1.63%)</title><rect x="55.4876%" y="277" width="1.6344%" height="15" fill="rgb(246,171,24)" fg:x="219450" fg:w="6464"/><text x="55.7376%" y="287.50"></text></g><g><title>__GI___libc_malloc (6,435 samples, 1.63%)</title><rect x="55.4949%" y="261" width="1.6271%" height="15" fill="rgb(215,142,24)" fg:x="219479" fg:w="6435"/><text x="55.7449%" y="271.50"></text></g><g><title>operator new[]@plt (67 samples, 0.02%)</title><rect x="57.1278%" y="277" width="0.0169%" height="15" fill="rgb(250,187,7)" fg:x="225937" fg:w="67"/><text x="57.3778%" y="287.50"></text></g><g><title>rocksdb::ShouldReportDetailedTime (160 samples, 0.04%)</title><rect x="57.1447%" y="277" width="0.0405%" height="15" fill="rgb(228,66,33)" fg:x="226004" fg:w="160"/><text x="57.3947%" y="287.50"></text></g><g><title>snappy::GetUncompressedLength (80 samples, 0.02%)</title><rect x="57.1852%" y="277" width="0.0202%" height="15" fill="rgb(234,215,21)" fg:x="226164" fg:w="80"/><text x="57.4352%" y="287.50"></text></g><g><title>snappy::ByteArraySource::Skip (46 samples, 0.01%)</title><rect x="57.3404%" y="245" width="0.0116%" height="15" fill="rgb(222,191,20)" fg:x="226778" fg:w="46"/><text x="57.5904%" y="255.50"></text></g><g><title>[rocksdb-application] (379 samples, 0.10%)</title><rect x="59.6836%" y="229" width="0.0958%" height="15" fill="rgb(245,79,54)" fg:x="236045" fg:w="379"/><text x="59.9336%" y="239.50"></text></g><g><title>__memcpy_evex_unaligned_erms (2,938 samples, 0.74%)</title><rect x="59.7794%" y="229" width="0.7429%" height="15" fill="rgb(240,10,37)" fg:x="236424" fg:w="2938"/><text x="60.0294%" y="239.50"></text></g><g><title>[rocksdb-application] (627 samples, 0.16%)</title><rect x="68.4739%" y="213" width="0.1585%" height="15" fill="rgb(214,192,32)" fg:x="270810" fg:w="627"/><text x="68.7239%" y="223.50"></text></g><g><title>__memcpy_evex_unaligned_erms (2,074 samples, 0.52%)</title><rect x="68.6329%" y="213" width="0.5244%" height="15" fill="rgb(209,36,54)" fg:x="271439" fg:w="2074"/><text x="68.8829%" y="223.50"></text></g><g><title>snappy::ClearDeferred (575 samples, 0.15%)</title><rect x="69.1682%" y="213" width="0.1454%" height="15" fill="rgb(220,10,11)" fg:x="273556" fg:w="575"/><text x="69.4182%" y="223.50"></text></g><g><title>snappy::DeferMemCopy (1,335 samples, 0.34%)</title><rect x="69.3136%" y="213" width="0.3376%" height="15" fill="rgb(221,106,17)" fg:x="274131" fg:w="1335"/><text x="69.5636%" y="223.50"></text></g><g><title>[rocksdb-application] (1,480 samples, 0.37%)</title><rect x="72.3788%" y="197" width="0.3742%" height="15" fill="rgb(251,142,44)" fg:x="286254" fg:w="1480"/><text x="72.6288%" y="207.50"></text></g><g><title>__memcpy_evex_unaligned_erms (13,010 samples, 3.29%)</title><rect x="72.7531%" y="197" width="3.2896%" height="15" fill="rgb(238,13,15)" fg:x="287734" fg:w="13010"/><text x="73.0031%" y="207.50">__m..</text></g><g><title>snappy::MemCopy64 (25,293 samples, 6.40%)</title><rect x="69.6511%" y="213" width="6.3953%" height="15" fill="rgb(208,107,27)" fg:x="275466" fg:w="25293"/><text x="69.9011%" y="223.50">snappy::..</text></g><g><title>snappy::DecompressBranchless&lt;char*&gt; (61,384 samples, 15.52%)</title><rect x="60.5258%" y="229" width="15.5208%" height="15" fill="rgb(205,136,37)" fg:x="239376" fg:w="61384"/><text x="60.7758%" y="239.50">snappy::DecompressBranch..</text></g><g><title>snappy::RawUncompress (74,953 samples, 18.95%)</title><rect x="57.2264%" y="261" width="18.9517%" height="15" fill="rgb(250,205,27)" fg:x="226327" fg:w="74953"/><text x="57.4764%" y="271.50">snappy::RawUncompress</text></g><g><title>snappy::SnappyDecompressor::DecompressAllTags&lt;snappy::SnappyArrayWriter&gt; (74,456 samples, 18.83%)</title><rect x="57.3521%" y="245" width="18.8261%" height="15" fill="rgb(210,80,43)" fg:x="226824" fg:w="74456"/><text x="57.6021%" y="255.50">snappy::SnappyDecompressor::D..</text></g><g><title>snappy::SnappyDecompressor::RefillTag (520 samples, 0.13%)</title><rect x="76.0467%" y="229" width="0.1315%" height="15" fill="rgb(247,160,36)" fg:x="300760" fg:w="520"/><text x="76.2967%" y="239.50"></text></g><g><title>snappy::ByteArraySource::Skip (40 samples, 0.01%)</title><rect x="76.1680%" y="213" width="0.0101%" height="15" fill="rgb(234,13,49)" fg:x="301240" fg:w="40"/><text x="76.4180%" y="223.50"></text></g><g><title>rocksdb::UncompressSerializedBlock (83,188 samples, 21.03%)</title><rect x="55.1477%" y="309" width="21.0339%" height="15" fill="rgb(234,122,0)" fg:x="218106" fg:w="83188"/><text x="55.3977%" y="319.50">rocksdb::UncompressSerializedBlock</text></g><g><title>rocksdb::UncompressBlockData (83,095 samples, 21.01%)</title><rect x="55.1713%" y="293" width="21.0104%" height="15" fill="rgb(207,146,38)" fg:x="218199" fg:w="83095"/><text x="55.4213%" y="303.50">rocksdb::UncompressBlockData</text></g><g><title>snappy::RawUncompress (75,050 samples, 18.98%)</title><rect x="57.2054%" y="277" width="18.9763%" height="15" fill="rgb(207,177,25)" fg:x="226244" fg:w="75050"/><text x="57.4554%" y="287.50">snappy::RawUncompress</text></g><g><title>ROCKSDB_XXH3_64bits (41 samples, 0.01%)</title><rect x="76.2720%" y="277" width="0.0104%" height="15" fill="rgb(211,178,42)" fg:x="301651" fg:w="41"/><text x="76.5220%" y="287.50"></text></g><g><title>rocksdb::VerifyBlockChecksum (3,473 samples, 0.88%)</title><rect x="76.1817%" y="309" width="0.8781%" height="15" fill="rgb(230,69,54)" fg:x="301294" fg:w="3473"/><text x="76.4317%" y="319.50"></text></g><g><title>rocksdb::ComputeBuiltinChecksum (3,223 samples, 0.81%)</title><rect x="76.2449%" y="293" width="0.8149%" height="15" fill="rgb(214,135,41)" fg:x="301544" fg:w="3223"/><text x="76.4949%" y="303.50"></text></g><g><title>XXH3_hashLong_64b_default.constprop.0 (3,075 samples, 0.78%)</title><rect x="76.2823%" y="277" width="0.7775%" height="15" fill="rgb(237,67,25)" fg:x="301692" fg:w="3075"/><text x="76.5323%" y="287.50"></text></g><g><title>rocksdb::BlockFetcher::ReadBlockContents (171,889 samples, 43.46%)</title><rect x="33.6483%" y="325" width="43.4618%" height="15" fill="rgb(222,189,50)" fg:x="133077" fg:w="171889"/><text x="33.8983%" y="335.50">rocksdb::BlockFetcher::ReadBlockContents</text></g><g><title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (199 samples, 0.05%)</title><rect x="77.0598%" y="309" width="0.0503%" height="15" fill="rgb(245,148,34)" fg:x="304767" fg:w="199"/><text x="77.3098%" y="319.50"></text></g><g><title>__memset_evex_unaligned_erms (51 samples, 0.01%)</title><rect x="77.0973%" y="293" width="0.0129%" height="15" fill="rgb(222,29,6)" fg:x="304915" fg:w="51"/><text x="77.3473%" y="303.50"></text></g><g><title>rocksdb::BlockFetcher::~BlockFetcher (71 samples, 0.02%)</title><rect x="77.1101%" y="325" width="0.0180%" height="15" fill="rgb(221,189,43)" fg:x="304966" fg:w="71"/><text x="77.3601%" y="335.50"></text></g><g><title>rocksdb::ReadOptions::ReadOptions (178 samples, 0.05%)</title><rect x="77.1289%" y="325" width="0.0450%" height="15" fill="rgb(207,36,27)" fg:x="305040" fg:w="178"/><text x="77.3789%" y="335.50"></text></g><g><title>rocksdb::Status::operator= (657 samples, 0.17%)</title><rect x="77.1739%" y="325" width="0.1661%" height="15" fill="rgb(217,90,24)" fg:x="305218" fg:w="657"/><text x="77.4239%" y="335.50"></text></g><g><title>rocksdb::StopWatch::StopWatch (173 samples, 0.04%)</title><rect x="77.3400%" y="325" width="0.0437%" height="15" fill="rgb(224,66,35)" fg:x="305875" fg:w="173"/><text x="77.5900%" y="335.50"></text></g><g><title>rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block_kData&gt; (220,116 samples, 55.66%)</title><rect x="21.7353%" y="341" width="55.6560%" height="15" fill="rgb(221,13,50)" fg:x="85962" fg:w="220116"/><text x="21.9853%" y="351.50">rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block_kData&gt;</text></g><g><title>rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block_kData&gt; (221,210 samples, 55.93%)</title><rect x="21.5128%" y="357" width="55.9326%" height="15" fill="rgb(236,68,49)" fg:x="85082" fg:w="221210"/><text x="21.7628%" y="367.50">rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block_kData&gt;</text></g><g><title>rocksdb::Status::operator= (213 samples, 0.05%)</title><rect x="77.3916%" y="341" width="0.0539%" height="15" fill="rgb(229,146,28)" fg:x="306079" fg:w="213"/><text x="77.6416%" y="351.50"></text></g><g><title>rocksdb::Cleanable::RegisterCleanup (45 samples, 0.01%)</title><rect x="77.4454%" y="357" width="0.0114%" height="15" fill="rgb(225,31,38)" fg:x="306292" fg:w="45"/><text x="77.6954%" y="367.50"></text></g><g><title>rocksdb::Status::operator= (248 samples, 0.06%)</title><rect x="77.4568%" y="357" width="0.0627%" height="15" fill="rgb(250,208,3)" fg:x="306337" fg:w="248"/><text x="77.7068%" y="367.50"></text></g><g><title>rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt; (225,867 samples, 57.11%)</title><rect x="20.4241%" y="373" width="57.1101%" height="15" fill="rgb(246,54,23)" fg:x="80776" fg:w="225867"/><text x="20.6741%" y="383.50">rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;</text></g><g><title>rocksdb::UncompressionDict::GetEmptyDict (58 samples, 0.01%)</title><rect x="77.5195%" y="357" width="0.0147%" height="15" fill="rgb(243,76,11)" fg:x="306585" fg:w="58"/><text x="77.7695%" y="367.50"></text></g><g><title>rocksdb::BlockBasedTable::NewIndexIterator (725 samples, 0.18%)</title><rect x="77.5342%" y="373" width="0.1833%" height="15" fill="rgb(245,21,50)" fg:x="306643" fg:w="725"/><text x="77.7842%" y="383.50"></text></g><g><title>rocksdb::BlockCacheLookupContext::~BlockCacheLookupContext (157 samples, 0.04%)</title><rect x="77.7281%" y="373" width="0.0397%" height="15" fill="rgb(228,9,43)" fg:x="307410" fg:w="157"/><text x="77.9781%" y="383.50"></text></g><g><title>rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::UpdateKey (245 samples, 0.06%)</title><rect x="77.7678%" y="373" width="0.0619%" height="15" fill="rgb(208,100,47)" fg:x="307567" fg:w="245"/><text x="78.0178%" y="383.50"></text></g><g><title>rocksdb::Cleanable::Cleanable (83 samples, 0.02%)</title><rect x="77.8298%" y="373" width="0.0210%" height="15" fill="rgb(232,26,8)" fg:x="307812" fg:w="83"/><text x="78.0798%" y="383.50"></text></g><g><title>rocksdb::CachableEntry&lt;rocksdb::Block&gt;::ReleaseCacheHandle (138 samples, 0.03%)</title><rect x="77.8679%" y="357" width="0.0349%" height="15" fill="rgb(216,166,38)" fg:x="307963" fg:w="138"/><text x="78.1179%" y="367.50"></text></g><g><title>rocksdb::ShardedCache&lt;rocksdb::lru_cache::LRUCacheShard&gt;::Release (73 samples, 0.02%)</title><rect x="77.9028%" y="357" width="0.0185%" height="15" fill="rgb(251,202,51)" fg:x="308101" fg:w="73"/><text x="78.1528%" y="367.50"></text></g><g><title>rocksdb::lru_cache::LRUCacheShard::MaintainPoolSize (596 samples, 0.15%)</title><rect x="78.1880%" y="325" width="0.1507%" height="15" fill="rgb(254,216,34)" fg:x="309229" fg:w="596"/><text x="78.4380%" y="335.50"></text></g><g><title>rocksdb::lru_cache::LRUCacheShard::LRU_Insert (1,554 samples, 0.39%)</title><rect x="77.9461%" y="341" width="0.3929%" height="15" fill="rgb(251,32,27)" fg:x="308272" fg:w="1554"/><text x="78.1961%" y="351.50"></text></g><g><title>rocksdb::port::Mutex::Lock (372 samples, 0.09%)</title><rect x="78.3390%" y="341" width="0.0941%" height="15" fill="rgb(208,127,28)" fg:x="309826" fg:w="372"/><text x="78.5890%" y="351.50"></text></g><g><title>___pthread_mutex_lock (337 samples, 0.09%)</title><rect x="78.3478%" y="325" width="0.0852%" height="15" fill="rgb(224,137,22)" fg:x="309861" fg:w="337"/><text x="78.5978%" y="335.50"></text></g><g><title>lll_mutex_lock_optimized (293 samples, 0.07%)</title><rect x="78.3590%" y="309" width="0.0741%" height="15" fill="rgb(254,70,32)" fg:x="309905" fg:w="293"/><text x="78.6090%" y="319.50"></text></g><g><title>rocksdb::Cleanable::~Cleanable (3,382 samples, 0.86%)</title><rect x="77.8507%" y="373" width="0.8551%" height="15" fill="rgb(229,75,37)" fg:x="307895" fg:w="3382"/><text x="78.1007%" y="383.50"></text></g><g><title>rocksdb::lru_cache::LRUCacheShard::Release (3,103 samples, 0.78%)</title><rect x="77.9213%" y="357" width="0.7846%" height="15" fill="rgb(252,64,23)" fg:x="308174" fg:w="3103"/><text x="78.1713%" y="367.50"></text></g><g><title>rocksdb::port::Mutex::Unlock (1,079 samples, 0.27%)</title><rect x="78.4330%" y="341" width="0.2728%" height="15" fill="rgb(232,162,48)" fg:x="310198" fg:w="1079"/><text x="78.6830%" y="351.50"></text></g><g><title>___pthread_mutex_unlock (1,056 samples, 0.27%)</title><rect x="78.4389%" y="325" width="0.2670%" height="15" fill="rgb(246,160,12)" fg:x="310221" fg:w="1056"/><text x="78.6889%" y="335.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (1,056 samples, 0.27%)</title><rect x="78.4389%" y="309" width="0.2670%" height="15" fill="rgb(247,166,0)" fg:x="310221" fg:w="1056"/><text x="78.6889%" y="319.50"></text></g><g><title>lll_mutex_unlock_optimized (1,023 samples, 0.26%)</title><rect x="78.4472%" y="293" width="0.2587%" height="15" fill="rgb(249,219,21)" fg:x="310254" fg:w="1023"/><text x="78.6972%" y="303.50"></text></g><g><title>__tls_init (52 samples, 0.01%)</title><rect x="80.8124%" y="341" width="0.0131%" height="15" fill="rgb(205,209,3)" fg:x="319608" fg:w="52"/><text x="81.0624%" y="351.50"></text></g><g><title>do_numa_page (46 samples, 0.01%)</title><rect x="80.8361%" y="245" width="0.0116%" height="15" fill="rgb(243,44,1)" fg:x="319702" fg:w="46"/><text x="81.0861%" y="255.50"></text></g><g><title>__handle_mm_fault (66 samples, 0.02%)</title><rect x="80.8313%" y="277" width="0.0167%" height="15" fill="rgb(206,159,16)" fg:x="319683" fg:w="66"/><text x="81.0813%" y="287.50"></text></g><g><title>handle_pte_fault (52 samples, 0.01%)</title><rect x="80.8349%" y="261" width="0.0131%" height="15" fill="rgb(244,77,30)" fg:x="319697" fg:w="52"/><text x="81.0849%" y="271.50"></text></g><g><title>do_user_addr_fault (90 samples, 0.02%)</title><rect x="80.8258%" y="309" width="0.0228%" height="15" fill="rgb(218,69,12)" fg:x="319661" fg:w="90"/><text x="81.0758%" y="319.50"></text></g><g><title>handle_mm_fault (72 samples, 0.02%)</title><rect x="80.8303%" y="293" width="0.0182%" height="15" fill="rgb(212,87,7)" fg:x="319679" fg:w="72"/><text x="81.0803%" y="303.50"></text></g><g><title>asm_exc_page_fault (119 samples, 0.03%)</title><rect x="80.8255%" y="341" width="0.0301%" height="15" fill="rgb(245,114,25)" fg:x="319660" fg:w="119"/><text x="81.0755%" y="351.50"></text></g><g><title>exc_page_fault (118 samples, 0.03%)</title><rect x="80.8258%" y="325" width="0.0298%" height="15" fill="rgb(210,61,42)" fg:x="319661" fg:w="118"/><text x="81.0758%" y="335.50"></text></g><g><title>__memcmp_evex_movbe (1,221 samples, 0.31%)</title><rect x="80.9218%" y="325" width="0.3087%" height="15" fill="rgb(211,52,33)" fg:x="320041" fg:w="1221"/><text x="81.1718%" y="335.50"></text></g><g><title>non-virtual thunk to rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (1,465 samples, 0.37%)</title><rect x="80.8604%" y="341" width="0.3704%" height="15" fill="rgb(234,58,33)" fg:x="319798" fg:w="1465"/><text x="81.1104%" y="351.50"></text></g><g><title>rocksdb::GetVarint32PtrFallback (305 samples, 0.08%)</title><rect x="81.2308%" y="341" width="0.0771%" height="15" fill="rgb(220,115,36)" fg:x="321263" fg:w="305"/><text x="81.4808%" y="351.50"></text></g><g><title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::BinarySeek&lt;rocksdb::DecodeKey&gt; (9,872 samples, 2.50%)</title><rect x="78.8136%" y="357" width="2.4961%" height="15" fill="rgb(243,153,54)" fg:x="311703" fg:w="9872"/><text x="79.0636%" y="367.50">ro..</text></g><g><title>__tls_init (355 samples, 0.09%)</title><rect x="82.2862%" y="341" width="0.0898%" height="15" fill="rgb(251,47,18)" fg:x="325437" fg:w="355"/><text x="82.5362%" y="351.50"></text></g><g><title>[rocksdb-application] (162 samples, 0.04%)</title><rect x="82.5365%" y="325" width="0.0410%" height="15" fill="rgb(242,102,42)" fg:x="326427" fg:w="162"/><text x="82.7865%" y="335.50"></text></g><g><title>__memcmp_evex_movbe (3,708 samples, 0.94%)</title><rect x="82.5775%" y="325" width="0.9376%" height="15" fill="rgb(234,31,38)" fg:x="326589" fg:w="3708"/><text x="82.8275%" y="335.50"></text></g><g><title>non-virtual thunk to rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (4,495 samples, 1.14%)</title><rect x="82.3793%" y="341" width="1.1366%" height="15" fill="rgb(221,117,51)" fg:x="325805" fg:w="4495"/><text x="82.6293%" y="351.50"></text></g><g><title>[rocksdb-application] (206 samples, 0.05%)</title><rect x="87.1743%" y="309" width="0.0521%" height="15" fill="rgb(212,20,18)" fg:x="344769" fg:w="206"/><text x="87.4243%" y="319.50"></text></g><g><title>__memcpy_evex_unaligned_erms (1,831 samples, 0.46%)</title><rect x="87.2264%" y="309" width="0.4630%" height="15" fill="rgb(245,133,36)" fg:x="344975" fg:w="1831"/><text x="87.4764%" y="319.50"></text></g><g><title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::UpdateRawKeyAndMaybePadMinTimestamp (163 samples, 0.04%)</title><rect x="87.6941%" y="309" width="0.0412%" height="15" fill="rgb(212,6,19)" fg:x="346825" fg:w="163"/><text x="87.9441%" y="319.50"></text></g><g><title>rocksdb::GetVarint32PtrFallback (1,394 samples, 0.35%)</title><rect x="87.7353%" y="309" width="0.3525%" height="15" fill="rgb(218,1,36)" fg:x="346988" fg:w="1394"/><text x="87.9853%" y="319.50"></text></g><g><title>rocksdb::DataBlockIter::SeekImpl (37,106 samples, 9.38%)</title><rect x="78.7059%" y="373" width="9.3822%" height="15" fill="rgb(246,84,54)" fg:x="311277" fg:w="37106"/><text x="78.9559%" y="383.50">rocksdb::Data..</text></g><g><title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::FindKeyAfterBinarySeek (26,808 samples, 6.78%)</title><rect x="81.3097%" y="357" width="6.7784%" height="15" fill="rgb(242,110,6)" fg:x="321575" fg:w="26808"/><text x="81.5597%" y="367.50">rocksdb::..</text></g><g><title>rocksdb::DataBlockIter::NextImpl (18,083 samples, 4.57%)</title><rect x="83.5158%" y="341" width="4.5723%" height="15" fill="rgb(214,47,5)" fg:x="330300" fg:w="18083"/><text x="83.7658%" y="351.50">rocks..</text></g><g><title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::ParseNextKey&lt;rocksdb::DecodeEntry&gt; (17,292 samples, 4.37%)</title><rect x="83.7158%" y="325" width="4.3723%" height="15" fill="rgb(218,159,25)" fg:x="331091" fg:w="17292"/><text x="83.9658%" y="335.50">rocks..</text></g><g><title>[libstdc++.so.6.0.30] (100 samples, 0.03%)</title><rect x="88.1508%" y="357" width="0.0253%" height="15" fill="rgb(215,211,28)" fg:x="348631" fg:w="100"/><text x="88.4008%" y="367.50"></text></g><g><title>_int_free (385 samples, 0.10%)</title><rect x="88.2436%" y="341" width="0.0973%" height="15" fill="rgb(238,59,32)" fg:x="348998" fg:w="385"/><text x="88.4936%" y="351.50"></text></g><g><title>tcache_put (74 samples, 0.02%)</title><rect x="88.3222%" y="325" width="0.0187%" height="15" fill="rgb(226,82,3)" fg:x="349309" fg:w="74"/><text x="88.5722%" y="335.50"></text></g><g><title>__GI___libc_free (840 samples, 0.21%)</title><rect x="88.1761%" y="357" width="0.2124%" height="15" fill="rgb(240,164,32)" fg:x="348731" fg:w="840"/><text x="88.4261%" y="367.50"></text></g><g><title>arena_for_chunk (188 samples, 0.05%)</title><rect x="88.3409%" y="341" width="0.0475%" height="15" fill="rgb(232,46,7)" fg:x="349383" fg:w="188"/><text x="88.5909%" y="351.50"></text></g><g><title>arena_for_chunk (184 samples, 0.05%)</title><rect x="88.3419%" y="325" width="0.0465%" height="15" fill="rgb(229,129,53)" fg:x="349387" fg:w="184"/><text x="88.5919%" y="335.50"></text></g><g><title>heap_for_ptr (74 samples, 0.02%)</title><rect x="88.3697%" y="309" width="0.0187%" height="15" fill="rgb(234,188,29)" fg:x="349497" fg:w="74"/><text x="88.6197%" y="319.50"></text></g><g><title>operator delete (77 samples, 0.02%)</title><rect x="88.3884%" y="357" width="0.0195%" height="15" fill="rgb(246,141,4)" fg:x="349571" fg:w="77"/><text x="88.6384%" y="367.50"></text></g><g><title>rocksdb::DataBlockIter::~DataBlockIter (1,254 samples, 0.32%)</title><rect x="88.0946%" y="373" width="0.3171%" height="15" fill="rgb(229,23,39)" fg:x="348409" fg:w="1254"/><text x="88.3446%" y="383.50"></text></g><g><title>rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Equal (605 samples, 0.15%)</title><rect x="88.6087%" y="357" width="0.1530%" height="15" fill="rgb(206,12,3)" fg:x="350442" fg:w="605"/><text x="88.8587%" y="367.50"></text></g><g><title>__memcmp_evex_movbe (504 samples, 0.13%)</title><rect x="88.6342%" y="341" width="0.1274%" height="15" fill="rgb(252,226,20)" fg:x="350543" fg:w="504"/><text x="88.8842%" y="351.50"></text></g><g><title>rocksdb::Cleanable::DelegateCleanupsTo (112 samples, 0.03%)</title><rect x="88.7616%" y="357" width="0.0283%" height="15" fill="rgb(216,123,35)" fg:x="351047" fg:w="112"/><text x="89.0116%" y="367.50"></text></g><g><title>rocksdb::Cleanable::RegisterCleanup (75 samples, 0.02%)</title><rect x="88.7710%" y="341" width="0.0190%" height="15" fill="rgb(212,68,40)" fg:x="351084" fg:w="75"/><text x="89.0210%" y="351.50"></text></g><g><title>rocksdb::GetContext::SaveValue (1,524 samples, 0.39%)</title><rect x="88.4117%" y="373" width="0.3853%" height="15" fill="rgb(254,125,32)" fg:x="349663" fg:w="1524"/><text x="88.6617%" y="383.50"></text></g><g><title>[rocksdb-application] (306 samples, 0.08%)</title><rect x="94.5509%" y="341" width="0.0774%" height="15" fill="rgb(253,97,22)" fg:x="373943" fg:w="306"/><text x="94.8009%" y="351.50"></text></g><g><title>__memcmp_evex_movbe (6,337 samples, 1.60%)</title><rect x="94.6282%" y="341" width="1.6023%" height="15" fill="rgb(241,101,14)" fg:x="374249" fg:w="6337"/><text x="94.8782%" y="351.50"></text></g><g><title>non-virtual thunk to rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (7,888 samples, 1.99%)</title><rect x="94.2368%" y="357" width="1.9945%" height="15" fill="rgb(238,103,29)" fg:x="372701" fg:w="7888"/><text x="94.4868%" y="367.50">n..</text></g><g><title>rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::UpdateRawKeyAndMaybePadMinTimestamp (309 samples, 0.08%)</title><rect x="96.6601%" y="341" width="0.0781%" height="15" fill="rgb(233,195,47)" fg:x="382285" fg:w="309"/><text x="96.9101%" y="351.50"></text></g><g><title>rocksdb::IndexBlockIter::SeekImpl (34,165 samples, 8.64%)</title><rect x="88.8001%" y="373" width="8.6386%" height="15" fill="rgb(246,218,30)" fg:x="351199" fg:w="34165"/><text x="89.0501%" y="383.50">rocksdb::Ind..</text></g><g><title>rocksdb::IndexBlockIter::ParseNextIndexKey (4,775 samples, 1.21%)</title><rect x="96.2313%" y="357" width="1.2074%" height="15" fill="rgb(219,145,47)" fg:x="380589" fg:w="4775"/><text x="96.4813%" y="367.50"></text></g><g><title>rocksdb::IndexValue::DecodeFrom (2,770 samples, 0.70%)</title><rect x="96.7383%" y="341" width="0.7004%" height="15" fill="rgb(243,12,26)" fg:x="382594" fg:w="2770"/><text x="96.9883%" y="351.50"></text></g><g><title>rocksdb::BlockHandle::DecodeFrom (2,117 samples, 0.54%)</title><rect x="96.9034%" y="325" width="0.5353%" height="15" fill="rgb(214,87,16)" fg:x="383247" fg:w="2117"/><text x="97.1534%" y="335.50"></text></g><g><title>rocksdb::GetVarint64Ptr (1,406 samples, 0.36%)</title><rect x="97.0831%" y="309" width="0.3555%" height="15" fill="rgb(208,99,42)" fg:x="383958" fg:w="1406"/><text x="97.3331%" y="319.50"></text></g><g><title>rocksdb::IndexBlockIter::value (117 samples, 0.03%)</title><rect x="97.4386%" y="373" width="0.0296%" height="15" fill="rgb(253,99,2)" fg:x="385364" fg:w="117"/><text x="97.6886%" y="383.50"></text></g><g><title>[libstdc++.so.6.0.30] (56 samples, 0.01%)</title><rect x="97.5491%" y="357" width="0.0142%" height="15" fill="rgb(220,168,23)" fg:x="385801" fg:w="56"/><text x="97.7991%" y="367.50"></text></g><g><title>_int_free (279 samples, 0.07%)</title><rect x="97.6429%" y="341" width="0.0705%" height="15" fill="rgb(242,38,24)" fg:x="386172" fg:w="279"/><text x="97.8929%" y="351.50"></text></g><g><title>tcache_put (62 samples, 0.02%)</title><rect x="97.6978%" y="325" width="0.0157%" height="15" fill="rgb(225,182,9)" fg:x="386389" fg:w="62"/><text x="97.9478%" y="335.50"></text></g><g><title>__GI___libc_free (665 samples, 0.17%)</title><rect x="97.5633%" y="357" width="0.1681%" height="15" fill="rgb(243,178,37)" fg:x="385857" fg:w="665"/><text x="97.8133%" y="367.50"></text></g><g><title>arena_for_chunk (71 samples, 0.02%)</title><rect x="97.7135%" y="341" width="0.0180%" height="15" fill="rgb(232,139,19)" fg:x="386451" fg:w="71"/><text x="97.9635%" y="351.50"></text></g><g><title>arena_for_chunk (63 samples, 0.02%)</title><rect x="97.7155%" y="325" width="0.0159%" height="15" fill="rgb(225,201,24)" fg:x="386459" fg:w="63"/><text x="97.9655%" y="335.50"></text></g><g><title>heap_for_ptr (51 samples, 0.01%)</title><rect x="97.7185%" y="309" width="0.0129%" height="15" fill="rgb(221,47,46)" fg:x="386471" fg:w="51"/><text x="97.9685%" y="319.50"></text></g><g><title>operator delete (60 samples, 0.02%)</title><rect x="97.7317%" y="357" width="0.0152%" height="15" fill="rgb(249,23,13)" fg:x="386523" fg:w="60"/><text x="97.9817%" y="367.50"></text></g><g><title>rocksdb::IndexBlockIter::~IndexBlockIter (1,126 samples, 0.28%)</title><rect x="97.4682%" y="373" width="0.2847%" height="15" fill="rgb(219,9,5)" fg:x="385481" fg:w="1126"/><text x="97.7182%" y="383.50"></text></g><g><title>rocksdb::Status::Status (508 samples, 0.13%)</title><rect x="97.7529%" y="373" width="0.1284%" height="15" fill="rgb(254,171,16)" fg:x="386607" fg:w="508"/><text x="98.0029%" y="383.50"></text></g><g><title>rocksdb::BlockBasedTable::Get (316,681 samples, 80.07%)</title><rect x="17.9206%" y="389" width="80.0723%" height="15" fill="rgb(230,171,20)" fg:x="70875" fg:w="316681"/><text x="18.1706%" y="399.50">rocksdb::BlockBasedTable::Get</text></g><g><title>rocksdb::Status::operator= (441 samples, 0.11%)</title><rect x="97.8814%" y="373" width="0.1115%" height="15" fill="rgb(210,71,41)" fg:x="387115" fg:w="441"/><text x="98.1314%" y="383.50"></text></g><g><title>rocksdb::TableCache::Get (318,486 samples, 80.53%)</title><rect x="17.4817%" y="405" width="80.5287%" height="15" fill="rgb(206,173,20)" fg:x="69139" fg:w="318486"/><text x="17.7317%" y="415.50">rocksdb::TableCache::Get</text></g><g><title>rocksdb::BlockBasedTable::NewRangeTombstoneIterator (63 samples, 0.02%)</title><rect x="97.9944%" y="389" width="0.0159%" height="15" fill="rgb(233,88,34)" fg:x="387562" fg:w="63"/><text x="98.2444%" y="399.50"></text></g><g><title>rocksdb::DBImpl::GetImpl (328,885 samples, 83.16%)</title><rect x="14.8652%" y="453" width="83.1580%" height="15" fill="rgb(223,209,46)" fg:x="58791" fg:w="328885"/><text x="15.1152%" y="463.50">rocksdb::DBImpl::GetImpl</text></g><g><title>rocksdb::DBImpl::GetImpl (328,784 samples, 83.13%)</title><rect x="14.8907%" y="437" width="83.1325%" height="15" fill="rgb(250,43,18)" fg:x="58892" fg:w="328784"/><text x="15.1407%" y="447.50">rocksdb::DBImpl::GetImpl</text></g><g><title>rocksdb::Version::Get (323,553 samples, 81.81%)</title><rect x="16.2134%" y="421" width="81.8098%" height="15" fill="rgb(208,13,10)" fg:x="64123" fg:w="323553"/><text x="16.4634%" y="431.50">rocksdb::Version::Get</text></g><g><title>rocksdb::Version::IsFilterSkipped (51 samples, 0.01%)</title><rect x="98.0103%" y="405" width="0.0129%" height="15" fill="rgb(212,200,36)" fg:x="387625" fg:w="51"/><text x="98.2603%" y="415.50"></text></g><g><title>rocksdb::DBImpl::Get (329,400 samples, 83.29%)</title><rect x="14.7684%" y="469" width="83.2882%" height="15" fill="rgb(225,90,30)" fg:x="58408" fg:w="329400"/><text x="15.0184%" y="479.50">rocksdb::DBImpl::Get</text></g><g><title>rocksdb::ReadOptions::ReadOptions (132 samples, 0.03%)</title><rect x="98.0232%" y="453" width="0.0334%" height="15" fill="rgb(236,182,39)" fg:x="387676" fg:w="132"/><text x="98.2732%" y="463.50"></text></g><g><title>rocksdb::DBImpl::Get (329,448 samples, 83.30%)</title><rect x="14.7575%" y="485" width="83.3004%" height="15" fill="rgb(212,144,35)" fg:x="58365" fg:w="329448"/><text x="15.0075%" y="495.50">rocksdb::DBImpl::Get</text></g><g><title>rocksdb_get_pinned (330,279 samples, 83.51%)</title><rect x="14.5476%" y="501" width="83.5105%" height="15" fill="rgb(228,63,44)" fg:x="57535" fg:w="330279"/><text x="14.7976%" y="511.50">rocksdb_get_pinned</text></g><g><title>rocksdb::CachableEntry&lt;rocksdb::Block&gt;::ReleaseCacheHandle (45 samples, 0.01%)</title><rect x="98.0821%" y="469" width="0.0114%" height="15" fill="rgb(228,109,6)" fg:x="387909" fg:w="45"/><text x="98.3321%" y="479.50"></text></g><g><title>rocksdb::ShardedCache&lt;rocksdb::lru_cache::LRUCacheShard&gt;::Release (42 samples, 0.01%)</title><rect x="98.0935%" y="469" width="0.0106%" height="15" fill="rgb(238,117,24)" fg:x="387954" fg:w="42"/><text x="98.3435%" y="479.50"></text></g><g><title>rocksdb::lru_cache::LRUCacheShard::MaintainPoolSize (348 samples, 0.09%)</title><rect x="98.3072%" y="437" width="0.0880%" height="15" fill="rgb(242,26,26)" fg:x="388799" fg:w="348"/><text x="98.5572%" y="447.50"></text></g><g><title>rocksdb::lru_cache::LRUCacheShard::LRU_Insert (1,081 samples, 0.27%)</title><rect x="98.1221%" y="453" width="0.2733%" height="15" fill="rgb(221,92,48)" fg:x="388067" fg:w="1081"/><text x="98.3721%" y="463.50"></text></g><g><title>rocksdb::port::Mutex::Lock (400 samples, 0.10%)</title><rect x="98.3954%" y="453" width="0.1011%" height="15" fill="rgb(209,209,32)" fg:x="389148" fg:w="400"/><text x="98.6454%" y="463.50"></text></g><g><title>___pthread_mutex_lock (377 samples, 0.10%)</title><rect x="98.4012%" y="437" width="0.0953%" height="15" fill="rgb(221,70,22)" fg:x="389171" fg:w="377"/><text x="98.6512%" y="447.50"></text></g><g><title>lll_mutex_lock_optimized (325 samples, 0.08%)</title><rect x="98.4144%" y="421" width="0.0822%" height="15" fill="rgb(248,145,5)" fg:x="389223" fg:w="325"/><text x="98.6644%" y="431.50"></text></g><g><title>rocksdb::db::DBCommon&lt;T,D&gt;::get (338,575 samples, 85.61%)</title><rect x="13.1446%" y="517" width="85.6081%" height="15" fill="rgb(226,116,26)" fg:x="51986" fg:w="338575"/><text x="13.3946%" y="527.50">rocksdb::db::DBCommon&lt;T,D&gt;::get</text></g><g><title>rocksdb_pinnableslice_destroy (2,747 samples, 0.69%)</title><rect x="98.0581%" y="501" width="0.6946%" height="15" fill="rgb(244,5,17)" fg:x="387814" fg:w="2747"/><text x="98.3081%" y="511.50"></text></g><g><title>rocksdb::Cleanable::~Cleanable (2,714 samples, 0.69%)</title><rect x="98.0665%" y="485" width="0.6862%" height="15" fill="rgb(252,159,33)" fg:x="387847" fg:w="2714"/><text x="98.3165%" y="495.50"></text></g><g><title>rocksdb::lru_cache::LRUCacheShard::Release (2,565 samples, 0.65%)</title><rect x="98.1041%" y="469" width="0.6486%" height="15" fill="rgb(206,71,0)" fg:x="387996" fg:w="2565"/><text x="98.3541%" y="479.50"></text></g><g><title>rocksdb::port::Mutex::Unlock (1,013 samples, 0.26%)</title><rect x="98.4966%" y="453" width="0.2561%" height="15" fill="rgb(233,118,54)" fg:x="389548" fg:w="1013"/><text x="98.7466%" y="463.50"></text></g><g><title>___pthread_mutex_unlock (992 samples, 0.25%)</title><rect x="98.5019%" y="437" width="0.2508%" height="15" fill="rgb(234,83,48)" fg:x="389569" fg:w="992"/><text x="98.7519%" y="447.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (992 samples, 0.25%)</title><rect x="98.5019%" y="421" width="0.2508%" height="15" fill="rgb(228,3,54)" fg:x="389569" fg:w="992"/><text x="98.7519%" y="431.50"></text></g><g><title>lll_mutex_unlock_optimized (963 samples, 0.24%)</title><rect x="98.5092%" y="405" width="0.2435%" height="15" fill="rgb(226,155,13)" fg:x="389598" fg:w="963"/><text x="98.7592%" y="415.50"></text></g><g><title>[[vdso]] (637 samples, 0.16%)</title><rect x="98.7689%" y="485" width="0.1611%" height="15" fill="rgb(241,28,37)" fg:x="390625" fg:w="637"/><text x="99.0189%" y="495.50"></text></g><g><title>[[vdso]] (447 samples, 0.11%)</title><rect x="98.8169%" y="469" width="0.1130%" height="15" fill="rgb(233,93,10)" fg:x="390815" fg:w="447"/><text x="99.0669%" y="479.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (711 samples, 0.18%)</title><rect x="98.7527%" y="517" width="0.1798%" height="15" fill="rgb(225,113,19)" fg:x="390561" fg:w="711"/><text x="99.0027%" y="527.50"></text></g><g><title>__GI___clock_gettime (671 samples, 0.17%)</title><rect x="98.7628%" y="501" width="0.1697%" height="15" fill="rgb(241,2,18)" fg:x="390601" fg:w="671"/><text x="99.0128%" y="511.50"></text></g><g><title>[[vdso]] (1,350 samples, 0.34%)</title><rect x="99.0356%" y="469" width="0.3413%" height="15" fill="rgb(228,207,21)" fg:x="391680" fg:w="1350"/><text x="99.2856%" y="479.50"></text></g><g><title>[[vdso]] (908 samples, 0.23%)</title><rect x="99.1474%" y="453" width="0.2296%" height="15" fill="rgb(213,211,35)" fg:x="392122" fg:w="908"/><text x="99.3974%" y="463.50"></text></g><g><title>__GI___clock_gettime (1,604 samples, 0.41%)</title><rect x="98.9787%" y="485" width="0.4056%" height="15" fill="rgb(209,83,10)" fg:x="391455" fg:w="1604"/><text x="99.2287%" y="495.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (1,681 samples, 0.43%)</title><rect x="98.9636%" y="501" width="0.4250%" height="15" fill="rgb(209,164,1)" fg:x="391395" fg:w="1681"/><text x="99.2136%" y="511.50"></text></g><g><title>std::time::Instant::elapsed (2,018 samples, 0.51%)</title><rect x="98.9325%" y="517" width="0.5102%" height="15" fill="rgb(213,184,43)" fg:x="391272" fg:w="2018"/><text x="99.1825%" y="527.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::sub_timespec (214 samples, 0.05%)</title><rect x="99.3886%" y="501" width="0.0541%" height="15" fill="rgb(231,61,34)" fg:x="393076" fg:w="214"/><text x="99.6386%" y="511.50"></text></g><g><title>rocksdb_application::do_work (352,390 samples, 89.10%)</title><rect x="10.3506%" y="533" width="89.1012%" height="15" fill="rgb(235,75,3)" fg:x="40936" fg:w="352390"/><text x="10.6006%" y="543.50">rocksdb_application::do_work</text></g><g><title>rocksdb::VersionEditHandler::CheckIterationResult (52 samples, 0.01%)</title><rect x="99.4655%" y="389" width="0.0131%" height="15" fill="rgb(220,106,47)" fg:x="393380" fg:w="52"/><text x="99.7155%" y="399.50"></text></g><g><title>rocksdb::VersionEditHandler::LoadTables (51 samples, 0.01%)</title><rect x="99.4657%" y="373" width="0.0129%" height="15" fill="rgb(210,196,33)" fg:x="393381" fg:w="51"/><text x="99.7157%" y="383.50"></text></g><g><title>rocksdb::VersionBuilder::LoadTableHandlers (51 samples, 0.01%)</title><rect x="99.4657%" y="357" width="0.0129%" height="15" fill="rgb(229,154,42)" fg:x="393381" fg:w="51"/><text x="99.7157%" y="367.50"></text></g><g><title>rocksdb::VersionBuilder::Rep::LoadTableHandlers (51 samples, 0.01%)</title><rect x="99.4657%" y="341" width="0.0129%" height="15" fill="rgb(228,114,26)" fg:x="393381" fg:w="51"/><text x="99.7157%" y="351.50"></text></g><g><title>rocksdb::DBImpl::Recover (62 samples, 0.02%)</title><rect x="99.4632%" y="437" width="0.0157%" height="15" fill="rgb(208,144,1)" fg:x="393371" fg:w="62"/><text x="99.7132%" y="447.50"></text></g><g><title>rocksdb::VersionSet::Recover (53 samples, 0.01%)</title><rect x="99.4655%" y="421" width="0.0134%" height="15" fill="rgb(239,112,37)" fg:x="393380" fg:w="53"/><text x="99.7155%" y="431.50"></text></g><g><title>rocksdb::VersionEditHandlerBase::Iterate (53 samples, 0.01%)</title><rect x="99.4655%" y="405" width="0.0134%" height="15" fill="rgb(210,96,50)" fg:x="393380" fg:w="53"/><text x="99.7155%" y="415.50"></text></g><g><title>rocksdb_application::open_db_singlethreaded (129 samples, 0.03%)</title><rect x="99.4518%" y="533" width="0.0326%" height="15" fill="rgb(222,178,2)" fg:x="393326" fg:w="129"/><text x="99.7018%" y="543.50"></text></g><g><title>rocksdb::db::DBCommon&lt;T,rocksdb::db::DBWithThreadModeInner&gt;::open_default (129 samples, 0.03%)</title><rect x="99.4518%" y="517" width="0.0326%" height="15" fill="rgb(226,74,18)" fg:x="393326" fg:w="129"/><text x="99.7018%" y="527.50"></text></g><g><title>rocksdb_open (127 samples, 0.03%)</title><rect x="99.4523%" y="501" width="0.0321%" height="15" fill="rgb(225,67,54)" fg:x="393328" fg:w="127"/><text x="99.7023%" y="511.50"></text></g><g><title>rocksdb::DB::Open (127 samples, 0.03%)</title><rect x="99.4523%" y="485" width="0.0321%" height="15" fill="rgb(251,92,32)" fg:x="393328" fg:w="127"/><text x="99.7023%" y="495.50"></text></g><g><title>rocksdb::DB::Open (127 samples, 0.03%)</title><rect x="99.4523%" y="469" width="0.0321%" height="15" fill="rgb(228,149,22)" fg:x="393328" fg:w="127"/><text x="99.7023%" y="479.50"></text></g><g><title>rocksdb::DBImpl::Open (127 samples, 0.03%)</title><rect x="99.4523%" y="453" width="0.0321%" height="15" fill="rgb(243,54,13)" fg:x="393328" fg:w="127"/><text x="99.7023%" y="463.50"></text></g><g><title>std::fs::read::inner (54 samples, 0.01%)</title><rect x="99.4844%" y="533" width="0.0137%" height="15" fill="rgb(243,180,28)" fg:x="393455" fg:w="54"/><text x="99.7344%" y="543.50"></text></g><g><title>std::io::default_read_to_end (54 samples, 0.01%)</title><rect x="99.4844%" y="517" width="0.0137%" height="15" fill="rgb(208,167,24)" fg:x="393455" fg:w="54"/><text x="99.7344%" y="527.50"></text></g><g><title>__GI___libc_read (54 samples, 0.01%)</title><rect x="99.4844%" y="501" width="0.0137%" height="15" fill="rgb(245,73,45)" fg:x="393455" fg:w="54"/><text x="99.7344%" y="511.50"></text></g><g><title>__GI___libc_read (54 samples, 0.01%)</title><rect x="99.4844%" y="485" width="0.0137%" height="15" fill="rgb(237,203,48)" fg:x="393455" fg:w="54"/><text x="99.7344%" y="495.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (54 samples, 0.01%)</title><rect x="99.4844%" y="469" width="0.0137%" height="15" fill="rgb(211,197,16)" fg:x="393455" fg:w="54"/><text x="99.7344%" y="479.50"></text></g><g><title>do_syscall_64 (54 samples, 0.01%)</title><rect x="99.4844%" y="453" width="0.0137%" height="15" fill="rgb(243,99,51)" fg:x="393455" fg:w="54"/><text x="99.7344%" y="463.50"></text></g><g><title>__x64_sys_read (54 samples, 0.01%)</title><rect x="99.4844%" y="437" width="0.0137%" height="15" fill="rgb(215,123,29)" fg:x="393455" fg:w="54"/><text x="99.7344%" y="447.50"></text></g><g><title>ksys_read (54 samples, 0.01%)</title><rect x="99.4844%" y="421" width="0.0137%" height="15" fill="rgb(239,186,37)" fg:x="393455" fg:w="54"/><text x="99.7344%" y="431.50"></text></g><g><title>vfs_read (54 samples, 0.01%)</title><rect x="99.4844%" y="405" width="0.0137%" height="15" fill="rgb(252,136,39)" fg:x="393455" fg:w="54"/><text x="99.7344%" y="415.50"></text></g><g><title>new_sync_read (54 samples, 0.01%)</title><rect x="99.4844%" y="389" width="0.0137%" height="15" fill="rgb(223,213,32)" fg:x="393455" fg:w="54"/><text x="99.7344%" y="399.50"></text></g><g><title>ext4_file_read_iter (54 samples, 0.01%)</title><rect x="99.4844%" y="373" width="0.0137%" height="15" fill="rgb(233,115,5)" fg:x="393455" fg:w="54"/><text x="99.7344%" y="383.50"></text></g><g><title>generic_file_read_iter (54 samples, 0.01%)</title><rect x="99.4844%" y="357" width="0.0137%" height="15" fill="rgb(207,226,44)" fg:x="393455" fg:w="54"/><text x="99.7344%" y="367.50"></text></g><g><title>filemap_read (54 samples, 0.01%)</title><rect x="99.4844%" y="341" width="0.0137%" height="15" fill="rgb(208,126,0)" fg:x="393455" fg:w="54"/><text x="99.7344%" y="351.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (352,683 samples, 89.18%)</title><rect x="10.3256%" y="565" width="89.1753%" height="15" fill="rgb(244,66,21)" fg:x="40837" fg:w="352683"/><text x="10.5756%" y="575.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (352,683 samples, 89.18%)</title><rect x="10.3256%" y="549" width="89.1753%" height="15" fill="rgb(222,97,12)" fg:x="40837" fg:w="352683"/><text x="10.5756%" y="559.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (352,693 samples, 89.18%)</title><rect x="10.3256%" y="581" width="89.1778%" height="15" fill="rgb(219,213,19)" fg:x="40837" fg:w="352693"/><text x="10.5756%" y="591.50">std::sys::pal::unix::thread::Thread::new::thread_start</text></g><g><title>__clone3 (353,786 samples, 89.45%)</title><rect x="10.0495%" y="613" width="89.4542%" height="15" fill="rgb(252,169,30)" fg:x="39745" fg:w="353786"/><text x="10.2995%" y="623.50">__clone3</text></g><g><title>start_thread (353,078 samples, 89.28%)</title><rect x="10.2285%" y="597" width="89.2752%" height="15" fill="rgb(206,32,51)" fg:x="40453" fg:w="353078"/><text x="10.4785%" y="607.50">start_thread</text></g><g><title>__tls_init (54 samples, 0.01%)</title><rect x="99.5120%" y="613" width="0.0137%" height="15" fill="rgb(250,172,42)" fg:x="393564" fg:w="54"/><text x="99.7620%" y="623.50"></text></g><g><title>asm_exc_page_fault (375 samples, 0.09%)</title><rect x="99.5262%" y="613" width="0.0948%" height="15" fill="rgb(209,34,43)" fg:x="393620" fg:w="375"/><text x="99.7762%" y="623.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (96 samples, 0.02%)</title><rect x="99.6296%" y="613" width="0.0243%" height="15" fill="rgb(223,11,35)" fg:x="394029" fg:w="96"/><text x="99.8796%" y="623.50"></text></g><g><title>entry_SYSCALL_64_safe_stack (968 samples, 0.24%)</title><rect x="99.6539%" y="613" width="0.2448%" height="15" fill="rgb(251,219,26)" fg:x="394125" fg:w="968"/><text x="99.9039%" y="623.50"></text></g><g><title>rocksdb::Block::NewDataIterator (44 samples, 0.01%)</title><rect x="99.9113%" y="613" width="0.0111%" height="15" fill="rgb(231,119,3)" fg:x="395143" fg:w="44"/><text x="100.1613%" y="623.50"></text></g><g><title>rocksdb::lru_cache::LRUCacheShard::Lookup (64 samples, 0.02%)</title><rect x="99.9469%" y="613" width="0.0162%" height="15" fill="rgb(216,97,11)" fg:x="395284" fg:w="64"/><text x="100.1969%" y="623.50"></text></g><g><title>syscall_return_via_sysret (69 samples, 0.02%)</title><rect x="99.9671%" y="613" width="0.0174%" height="15" fill="rgb(223,59,9)" fg:x="395364" fg:w="69"/><text x="100.2171%" y="623.50"></text></g><g><title>rocksdb-applica (395,473 samples, 99.99%)</title><rect x="0.0015%" y="629" width="99.9947%" height="15" fill="rgb(233,93,31)" fg:x="6" fg:w="395473"/><text x="0.2515%" y="639.50">rocksdb-applica</text></g><g><title>all (395,494 samples, 100%)</title><rect x="0.0000%" y="645" width="100.0000%" height="15" fill="rgb(239,81,33)" fg:x="0" fg:w="395494"/><text x="0.2500%" y="655.50"></text></g></svg></svg>